var search_data = {
    "index": {
        "searchIndex": [
             "autoexposurelockwidget",
             "display: a lock icon with two states shows whether the camera's ae (auto exposure) is locked or not.  usage: preferred aspect ratio: 1:1  interaction: tapping the lock icon will toggle the value of ae lock.",
             "onaelockchange",
             "updates when ae lock status has changed  @param islocked true means ae is locked, false otherwise",
             "performaelockaction",
             "performs auto exposure lock action @see #`onaelockactionresult` to listen on the action result by overridding  @param islock true if auto exposure is to be locked",
             "onaelockactionresult",
             "triggers when ae lock action finishes  @param error error object, or null if no error has occurred",
             "preflightstatuswidget",
             "display: the text shows a summary of the preflight checklist situation of the aircraft. the color of the background changes depends on how severe the situation is. green indicates everything is ok. yellow indicates something is at warning level. red indicates something is wrong and aircraft won't take off.  usage: preferred aspect ratio: 238:33.  interaction: tapping on status text will toggle between show and hide `preflightchecklistpanel`.",
             "connectionwidget",
             "display: widget has two states representing by two icons. red triangle icon indicates there is no connection with the product. green circle icon indicates there is connection with the product.  usage: preferred aspect ratio: 1:1.",
             "flightmodewidget",
             "display: the current flight mode of the aircraft. it uses the same language as djigo.  usage: preferred aspect ratio: 103:22.",
             "onflycontrollermodechange",
             "triggers when flight controller's flight mode changes  @param flightmode current flight controller flight mode",
             "batterywidget",
             "<p> this widget is configurable to hide some of the subviews. use the attribute excludeview with flags corresponding to each subview to hide.  here are all the flags: <p> batteryicon, percentage, singlevoltage, doublevoltage</code>  <p> note that multiple flags can be used simultaneously by logically or'ing them. for example, if user wants to hide voltage subviews in the widget, it can be done by following two steps. <p> define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> then, add following attribute to the batterywidget: custom:excludeview=singlevoltage|doublevoltage</code>  display: battery icon has two color states. white color indicates everything is ok. icon will change into red color if aircraft needs to return home, land immediately, or battery connection is bad. text shows percentage of charge remaining in battery. text also has two color states. green indicates the percentage is ok. red indicates the percentage is either below or just enough for returning home or landing immediately.  usage: preferred aspect ratio: 28:11.",
             "onbatterypercentagechange",
             "triggers when battery percentage changes  @param percentage from 0 - 100; 0 means empty, 100 means full.",
             "onbatteryconnectionstatechange",
             "triggers when djibatteryconnectionstate changes  @param status normal, means the battery status is good, other values mean the battery is in error state.",
             "onremainingbatterystatechange",
             "triggers when warning level of battery changes  @param warninglevel normal, means the battery energy is good. low, means the battery energy is ok to go home. verylow, means the battery energy is only for landing immediately.",
             "remotecontrolsignalwidget",
             "display: icon with 5 vertical bars total represents the current signal strength between rc and aircraft.  usage: preferred aspect ratio: 19:11.",
             "onremotecontrollersignalstrengthchange",
             "triggers when the value of remote controller signal strength changes  @param signalvalue 0 - 100; 0 means no signal, 100 means the best signal strength.",
             "gpssignalwidget",
             "display: small number on top of satellite icon shows the number of satellite available. 5 vertical bars represents the current gps signal strength. small 'r' letter shown or hidden indicates weather rtk is enabled or not.  usage: preferred aspect ratio: 21:11.",
             "ongpssignalstatuschange",
             "triggers when gpssignallevel changes  @param status status of the gps signal quality. level0 ~ level5; level0 means no signal, level5 means the best signal quality.",
             "onrtkenabled",
             "triggers when rtk is enabled or disabled  @param isrtkenabled true means the rtk is enabled, false otherwise",
             "onsatellitenumberchange",
             "triggers when the number of available satellites changes  @param satellitenum current number of available satellites",
             "videosignalwidget",
             "display: 5 vertical bars represents the current video signal strength.  usage: preferred aspect ratio: 19:11.",
             "visionwidget",
             "display: widget has two visual states to show if visual positioning is being used.   - white icon indicates visual positioning is being used.   - red icon indicates visual positioning is not being used.  usage: preferred aspect ratio: 1:1.",
             "onisvisionusedchange",
             "triggers when the vision detection state changes  @param visionsystemstatus the status of the vision system. normal means the vision system is working  and being used by flight controller. disabled or closed means the vision sensor is not used.",
             "visionsystemstatus",
             "the status of the vision system.",
             "closed",
             "user avoidance is disabled by the user.",
             "disabled",
             "the vision system is disabled. this could be due to the flight mode, tap mode, tracking mode, or draw status.",
             "normal",
             "the vision system is functioning normally.",
             "dashboardwidget",
             "display: compound widget that aggregates important physical state information of the aircraft into a dashboard. it includes the circular `compasswidget`, the `distancehomewidget`, the `horizontalvelocitywidget`, the `distancercwidget`, the `verticalvelocitywidget`, and the `altitudewidget`.  usage: preferred aspect ratio: 405:91.",
             "compasswidget",
             "display: compound widget that aggregates attitude and location data into one widget. the widget shows:   - heading of the aircraft relative to the pilot   - true north relative to pilot and aircraft   - roll and pitch of aircraft   - yaw and pitch of gimbal   - position of aircraft relative to pilot   - distance of aircraft from pilot   - home location  usage: preferred aspect ratio: 1:1. check `dashboardwidget` for an example of its usage.",
             "distancehomewidget",
             "display: distance between current location of the aircraft and home in meters.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "horizontalvelocitywidget",
             "display: horizontal velocity of aircraft in m/s.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "distancercwidget",
             "display: distance between current location of the aircraft and rc (pilot) in meters.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "verticalvelocitywidget",
             "display: text shows the aircraft's current vertical velocity in m/s. arrow indicates whether the aircraft is going up or down.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "altitudewidget",
             "display: current altitude of the aircraft in meters.  usage: preferred aspect ratio: 71:16. check `dashboardwidget` for an example of its usage.",
             "cameracontrolswidget",
             "display: compound widget  usage: preferred aspect ratio: 30:128  interaction: tapping the menu button will toggle between show and hide `camerasettingadvancedpanel`. tapping the switch button will toggle camera mode between shoot photo and record video. tapping the bottom button will toggle between show and hide `camerasettingexposurepanel`. full interaction with `cameracapturewidget`.",
             "picturevideoswitch",
             "display: a switch button shows weather the camera mode is in shoot photo or record video.  usage: preferred aspect ratio: 44:36. check `cameracontrolswidget` for an example of its usage.  interaction: use switch button to toggle the camera mode.",
             "cameracapturewidget",
             "display: in shooting photo, the widget can show the mode of photo will be taken and the related setting of that mode as following:   - single mode.   - hdr mode.   - burst mode and the number of burst shot will be taken.   - aeb mode and the number of shot will be taken.   - interval mode.  usage: preferred aspect ratio: 3:4. check `cameracontrolswidget` for an example of its usage.  interaction: tapping when in shoot photo mode will take a photo. tapping when in record video mode will start/stop recording.",
             "exposuresettingsmenu",
             "usage: preferred aspect ratio: 4:3. check `cameracontrolswidget` for an example of its usage.  interaction: tapping the button will toggle between show and hide `camerasettingexposurepanel`.",
             "remainingflighttimewidget",
             "display: has the same behavior as djigo's element. 1. the text inside white bubble shows the remaining flight time in minutes and seconds. 2. the middle line stretches along the width of the widget represents remaining battery percentage of the aircraft. if remaining battery is 100%, the line will cover the whole width of widget. if remaining battery is 0%, the line will disappear.   - red part of the line represents the battery percentage needed   to land aircraft immediately.   - yellow part of the line represents the battery percentage needed to   return aircraft home.   - green part of the line represents the battery percentage left to fly safely. 3. the two white dots represent the two settable battery threshold.   - the first one from the left represents the land immediately threshold.   - the second one represents the go home threshold. 4. the `h` icon is an addition to yellow part of the line. it represents the battery percentage needed to go home.",
             "colorwaveformwidget",
             "display: widget to display color waveform of live video.",
             "fpvwidget",
             "display: the video feed from camera.  usage: to allow user to interact with the video feed, use this widget in conjunction with ``fpvoverlaywidget",
             "setvideosource",
             "user can set video source to these three options: auto, primary, secondary. by default, the video source is set to auto if user does not specify it.  @param videosource an enum value of `videosource`.",
             "getvideosource",
             "retrieves the type of the video feed selection.  @return an enum value of `videosource`.",
             "videosource",
             "options for the user to select the video feed to associate with the fpvwidget. please  be aware that the video feed can only associate with one fpvwidget object. if several  fpvwidget objects are associated with the same videosource, only the last one can get the live video.",
             "auto",
             "auto switch from primary video feed to secondary video feed to show the djicamera live video when connecting with m600, m600pro, a3, or n3 product. it is primary video feed by default when connecting with other products.",
             "primary",
             "the first video feed of getvideofeeds array list in videofeeder singleton object.",
             "secondary",
             "the second video feed of getvideofeeds array list in videofeeder singleton object.",
             "fpvoverlaywidget",
             "display: single tap will show the selected target on top of the `fpvwidget`. has two modes with two different icons.   - focus mode will have a green square icon.   - meter mode will have a yellow circle icon. press and hold will show the gimbal control.   - small white dot will stay at where user first tap the screen to indicate the anchor point.   - blue circle will follow user's drag. together with the anchor point, this dictates the gimbal movement. when grid mode is turned on (using the `camerasettingadvancedpanel`), this also shows the grid lines.  usage: should be the same size and placed on top of `fpvoverlaywidget`.  interaction: tapping in focus mode will select that point as focus target point. tapping in meter mode will select that point as exposure meter target point. press and hold will activate gimbal control mode. dragging gimbal control will move the gimbal accordingly.",
             "takeoffwidget",
             "display: widget has three states with three different interactions.  - white icon with arrow up indicates the aircraft is not flying and the widget interaction is to start taking off.  - white icon with arrow down indicates the aircraft is flying and the widget  interaction is to start landing.  - red icon indicates the aircraft is landing and the widget interaction is  to cancel landing.  usage: preferred aspect ratio: 1:1 widget needs to be in activity context to show dialog  interaction: tapping the widget will open up a dialog to confirm the desired action. slide the dialog from left to right to start the action.",
             "ontakeoffstatuschange",
             "triggers when take off status changes.  @param istakingoff true if taking off, false otherwise",
             "onlandingstatuschange",
             "triggers when landing status changes.  @param islanding true if in process of landing, false otherwise",
             "performtakeoffaction",
             "performs take off action @see #`ontakeoffactionresult` to listen on the action result by overridding",
             "performlandingaction",
             "performs landing action @see #`onlandingactionresult` to listen on the action result by overridding",
             "performcancellandingaction",
             "performs cancel landing action @see #`oncancellandingactionresult` to listen on the action result by overridding",
             "performlandingconfirmationaction",
             "performs the landing confirmation action. this allows aircraft to land when landing  confirmation is received.",
             "ontakeoffactionresult",
             "triggers when take off action completes @see #`performtakeoffaction`  @param error error object, or null if no error has occurred",
             "onlandingactionresult",
             "triggers when landing action completes @see #`performlandingaction`  @param error error object, or null if no error has occurred",
             "oncancellandingactionresult",
             "triggers when cancel landing action completes @see #`performcancellandingaction`  @param error error object, or null if no error has occurred",
             "onlandingconfirmedresult",
             "triggers when confirm landing action completes.  @param error error object, or null if no error has occurred.",
             "ontakeoffenable",
             "triggers when takeoff widget changes between being enabled or not.  @param enabled current state that is true if button is enabled.",
             "returnhomewidget",
             "display: widget has two states with two different interactions.  - white icon with arrow down indicates the aircraft is flying and the widget  interaction is to start returning home.  - red icon indicates the aircraft is returning home and the widget interaction is  to cancel returning home.  usage: preferred aspect ratio: 1:1. widget needs to be in activity context for showing dialog  interaction: tapping the widget will open up a dialog to confirm the desired action. slide the dialog from left to right to start the action.",
             "performreturnhomeaction",
             "performs return home action. @see #`onreturnhomeactionresult` for result of action by overridding",
             "onreturnhomeactionresult",
             "triggers when return home action completes @see #`performreturnhomeaction`  @param error null means success, otherwise error object returns",
             "performcancelreturnhomeaction",
             "perform cancel return home action @see #`oncancelreturnhomeactionresult`",
             "oncancelreturnhomeactionresult",
             "triggers when cancel return home action completes @see #`performcancelreturnhomeaction`  @param error null means success, otherwise error object returns",
             "manualfocuswidget",
             "display: allows the focus distance to be set manually by using a slider. macro and infinity buttons can also be clicked to set focus distance to those values.  usage: preferred aspect ratio: 36:7.",
             "focusmodewidget",
             "display: shows the current focus mode of aircraft camera.   - mf text highlighted (in green) indicates focus mode is mf.   - af text highlighted (in green) indicates focus mode is af.  usage: preferred aspect ratio: 1:1  interaction: tapping will toggle between af and mf mode.",
             "onfocusmodechange",
             "triggers when focusmode has changed  @param focusmode camera focus mode enum",
             "performfocusmodeaction",
             "performs the focusmode change action. @see #`onfocusmodeactionresult` to listen on the action result by overridding  @param mode focusmode enum value",
             "onfocusmodeactionresult",
             "triggers when focus mode action completes.  @param error error object, or null if no error has occurred",
             "focusexposureswitchwidget",
             "display: widget has two visual states to indicate the current tapping interaction mode with `fpvoverlaywidget`.   - green square indicates focus mode. in this mode, tapping on   `fpvoverlaywidget` will select a target focus point.   - yellow circle indicates meter mode. in this mode, tapping on   `fpvoverlaywidget` will select a exposure metering target point.  usage: preferred aspect ratio: 1:1  interaction: tapping will toggle between focus and meter mode.",
             "cameraconfigshutterwidget",
             "display: camera's current shutter speed setting.  usage: preferred aspect ratio: 2:1.",
             "cameraconfigaperturewidget",
             "display: camera's current aperture setting.  usage: preferred aspect ratio: 2:1.",
             "cameraconfigisoandeiwidget",
             "display: camera's current iso setting.  usage: preferred aspect ratio: 2:1.",
             "cameraconfigwbwidget",
             "display: camera's current white balance setting.  usage: preferred aspect ratio: 2:1.",
             "cameraconfigstoragewidget",
             "display: first text from the left shows format/resolution of photo/video that camera wil capture. second text shows how many shots can be taken, or how many minutes can be recorded.  usage: preferred aspect ratio: 13:3.",
             "cameraconfigssdwidget",
             "usage: shows ssd video format, clip name, license, and capacity info.",
             "cameraconfigevwidget",
             "display: camera's current ev setting.  usage: preferred aspect ratio: 2:1.",
             "camerasettingadvancedpanel",
             "display: this panel shows all the camera settings that are not related to exposure. it is segmented in three parts:     - picture settings     - video settings     - common settings  usage: preferred aspect ratio: 53:79. to allow user to toggle hide and show this panel, use in conjunction with `cameracontrolswidget`  interaction: all the settings are presented in listview hierarchy.",
             "camerasettingexposurepanel",
             "display: this panel shows all the camera settings that are related to exposure. it allows exposure mode selection (auto, aperture priority, shutter priority and manual) depending on the connected camera. depending on the mode, the iso, aperture, shutter speed and exposure compensation value can also be set.  usage: preferred aspect ratio: 211:316. to allow user to toggle hide and show this panel, use in conjunction with `cameracontrolswidget`  interaction: all the settings are presented in listview hierarchy.",
             "rtkstatuspanel",
             "display: this panel shows all the information related to rtk.  this includes coordinates and altitude of the aircraft and base station, course angle, glonass, beidou and gps satellite counts for both antennas and the base station, and overall status of the rtk system.  interaction: rtk can be toggled using a switch at the top of the panel.",
             "compasscalibratingworkflow",
             "display: the progress of compas calibration.  usage: to step the user through the compass calibration process  interaction: depends on the step, there will be buttons at the bottom of the dialog for the user to interact. the user can either quit out of or continue with the process.",
             "startcalibration",
             "call this to send the start calibration command to the aircraft. as soon as the aircraft sends back the progress data, a dialog will show up to guide the user through the process.  @param callback actioncallback.",
             "stopcalibration",
             "call this to send the stop calibration command to the aircraft.  @param callback actioncallback.",
             "preflightchecklistpanel",
             "to allow user to toggle hide and show this panel, use in conjunction with `preflightstatuswidget`  display: panel that shows the preflight checklist that includes a list of items (like imu, gps etc) and their state that roll up into an overall state. <p> this panel is configurable to hide some of the items. use the attribute excludeitem with flags corresponding to each item to hide.  here are all the flags: <p> overall, flightmode, compass, imustatus, escstatus, visionsensors, radiochannelquality, remotecontrollermode, aircraftbattery, remotecontrollerbattery, aircraftbatterytemperature, remainingstoragecapacity, gimbalstatus</code>  <p> note that multiple flags can be used simultaneously by logically or'ing them. for example, if user wants to hide aircraft battery temperature item ad esc status item in the panel, it can be done by following two steps. <p> define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> then, add following attribute to the preflightchecklistpanel: custom:excludeitem=aircraftbatterytemperature|escstatus</code>  interaction: all the settings are presented in listview hierarchy.",
             "onvideosignalstrengthchange",
             "triggers when the value of the video signal strength changes.  @param signalvalue 0 - 100; 0 means no signal, 100 means the best signal strength;",
             "statustype",
             "pre-flight status types.",
             "offline",
             "the pre-flight status type is offline.",
             "good",
             "the pre-flight status type is good.",
             "warning",
             "the pre-flight status type is warning.",
             "error",
             "the pre-flight status type is error.",
             "mapwidget",
             "display: widget that displays the aircraft's state and information on the map this includes aircraft location, home location, aircraft trail path, aircraft heading, and no fly zones.  usage: preferred aspect ratio: 1:1",
             "initheremap",
             "initializes the mapwidget with here maps. note: here maps currently only works on arm v7 devices,  and you must sign up for their premium package.  @param listener the onmapreadylistener which will invoke the onmapready method when the map has finished initializing.",
             "initgooglemap",
             "initializes the mapwidget with google maps.  note: google maps only works on devices with google  play services (not crystal sky).  important: the following lifecycle methods in your activity must call  the corresponding methods in mapwidget in order for the map to render correctly: {@link #oncreate(bundle)},  {@link #onresume()}, {@link #onpause()}, {@link #ondestroy()}, {@link #onsaveinstancestate(bundle)}, and {@link #onlowmemory()}.  @param listener the onmapreadylistener which will invoke the onmapready method when the map has finished initializing.",
             "initamap",
             "initializes the mapwidget with amaps.  @param listener the onmapreadylistener which will invoke the onmapready method when the map has finished initializing.",
             "getmap",
             "get the djimap object.  @return a djimap object.",
             "setflyzonevisibility",
             "set selected fly zone visibility on the map.  @param flyzonecategory represents the category of flyzone to show/hide. @param isvisible `true` to show fly zones.",
             "hideallflyzones",
             "hides all fly zones.",
             "clearflightpath",
             "clears the flight path up to the current location.",
             "hideflightpath",
             "hides the flight path if it is visible.",
             "setflightpathcolor",
             "sets the color of the flight path.  @param color the color of the flight path.",
             "setmapcenterlock",
             "sets the lock on the aircraft or the home location to be in center.  @param mapcenterlock parameter to select the mode of centering.",
             "setautoframemap",
             "keeps the home location and the aircraft location visible and adjust the map bounds when set true.  @param isenabled parameter to enable or disable the map bounds lock.",
             "showhome",
             "shows the home marker if present on the map.",
             "hidehome",
             "hides the home marker if present on the map.",
             "showgimbalattitude",
             "show the gimbal attitude values.",
             "hidegimbalattitude",
             "hide the gimbal attitude values.",
             "hidedirectiontohome",
             "hides the path from aircraft to home point if visible.",
             "setaircraftbitmap",
             "changes the icon of the aircraft marker.  @param bitmap the image to be set to.",
             "sethomebitmap",
             "changes the icon of the home marker.  @param bitmap the image to be set to.",
             "onmapreadylistener",
             "when added to the mapwidget, the onmapreadylistener can be used to  determine when the map is ready to modify. no modifications should  be done to the mapwidget before the map is initialized using one  of the initialization methods.",
             "onmapready",
             "a callback indicating that the map is finished initializing.  @param map the object of `djimap`.",
             "mapcenterlock",
             "map centering options.",
             "none",
             "this will disable the centering of map on any markers.",
             "aircraft",
             "this will keep the aircraft icon always in center of the screen and keep following it during flight.",
             "home",
             "this will keep the home icon always in center of the screen. the aircraft icon will disappear from view bounds if the aircraft travels that distance",
             "showdirectiontohome",
             "shows the path from aircraft to home point if not already visible.",
             "showallflyzones",
             "make all fly zones visible on the map.",
             "showflightpath",
             "makes flight path visible if it's not visible.",
             "djimap",
             "the public interface of map object.",
             "addmarker",
             "adds a marker to this map.  @param markeroptions describes how to create the marker.  @return the marker that was added to the map.",
             "setoncamerachangelistener",
             "sets the `oncamerachangelistener` which can listen to camera changes.  @param listener the listener that is added to this map.",
             "removealloncamerachangelisteners",
             "removes all instances of `oncamerachangelistener` from the map.",
             "removeonmarkerclicklistener",
             "removes the `` from the map.",
             "setcameraposition",
             "sets the camera position.  @param cameraposition the camera position.",
             "getcameraposition",
             "gets the camera position.  @return the `djicameraposition` object.",
             "setmaptype",
             "sets the map type of this map.  @param type the map type that the map will be set to.",
             "setonmarkerclicklistener",
             "sets the `` which can listen click events on the map's markers.  @param listener the listener that is added to this map.",
             "setonmapclicklistener",
             "sets the ``.  @param listener the listener that is added to this map.",
             "removeonmapclicklistener",
             "removes the `` from the map.",
             "maptype",
             "the overall representation of the map.",
             "normal",
             "the overall representation of the map.",
             "satellite",
             "satellite photograph data.",
             "hybrid",
             "satellite photograph data and roads",
             "",
             "listener on the marker click event.",
             "onmarkerclick",
             "a callback indicating that a marker on the map has been clicked.  @param marker an object of `djimarker`.  @return a boolean that indicates whether you have consumed the event (i.e.,  you want to suppress the default behavior). if it returns false, then  the default behavior will occur in addition to your custom behavior.",
             "",
             "listener on the map click event.",
             "onmapclick",
             "a callback indicating that the map has been clicked.  @param latlng the point on the map that was clicked.",
             "oncamerachangelistener",
             "listener on the camera change event.",
             "oncamerachange",
             "a callback indicating that the camera position has changed.  @param cameraposition the new camera position.",
             "djimarker",
             "a marker that exists on a map object. to add a new marker to  a map, see `djimarkeroptions`.",
             "setposition",
             "sets marker geographic coordinate.  @param latlng an object of `djilatlng`.",
             "setrotation",
             "changes the rotation of the marker.  @param rotation the new rotation.",
             "seticon",
             "changes the icon of the marker.  @param bitmap the new icon.",
             "getposition",
             "gets the position of the marker.  @return the position of the marker.",
             "settitle",
             "changes the title of the marker.  @param title the new title.",
             "setvisible",
             "changes the visibility of the marker.  @param visible `true` if the marker is visible, `false` if it is hidden.",
             "isvisible",
             "gets the visibility of the marker.  @return `true` if the marker is visible, `false` if it is hidden.",
             "remove",
             "removes the marker from the map it is on.",
             "settag",
             "sets the tag which is an object associated with the marker.  @param o an object associated with the marker.",
             "gettag",
             "gets the tag.  @return an object associated with the marker.",
             "djimarkeroptions",
             "represents a set of instructions for creating a new `djimarker`. this  object can be passed to `djimarkeroptions` to add a new  marker to a map. each method returns the object itself so that they can be  used in a builder pattern.",
             "djimarkeroptions",
             "creates a new `djimarkeroptions` object.",
             "position",
             "sets the position the new marker will have when added to the map.  @param position the coordinates of the marker  @return the `djimarkeroptions` object.",
             "icon",
             "sets the icon the new marker will have when added to the map.  @param bitmap the icon of the marker.  @return the `djimarkeroptions` object.",
             "rotation",
             "sets the rotation the new marker will have when added to the map.  @param rotation the rotation of the marker.  @return the `djimarkeroptions` object.",
             "visible",
             "sets the visibility the new marker will have when added to the map.  @param visible the visibility of the marker.  @return the `djimarkeroptions` object.",
             "title",
             "sets the title the new marker will have when added to the map.  @param title the title of the marker.  @return the `djimarkeroptions` object.",
             "djicameraposition",
             "the position of the camera.",
             "djicameraposition",
             "creates a new camera position with the given coordinates, zoom level, tilt, and bearing.  @param target the position of the center point. @param zoom the zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level. @param tilt the tilt of the camera. @param bearing the orientation of the camera.",
             "djicameraposition",
             "creates a new camera position with the given coordinates and zoom level.  @param position the position of the center point. @param zoom the zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level.",
             "getposition",
             "gets the position of the center point of the camera.  @return the position of the center point of the camera.",
             "getzoom",
             "gets the zoom level of the camera.  @return the zoom level of the camera.",
             "gettilt",
             "gets the tilt of the camera.  @return the tilt of the camera.",
             "getbearing",
             "gets the orientation of the camera.  @return the orientation of the camera.",
             "djilatlng",
             "represents a point which includes latitude, longitude, altitude,  and accuracy info on a map.",
             "djilatlng",
             "creates a new `djilatlng` object with the coordinates (latitude, longitude).  @param latitude the latitude of the map point. @param longitude the longitude of the map point.",
             "djilatlng",
             "creates a new `djilatlng` object with the coordinates (latitude, longitude and altitude).  @param latitude the latitude of the map point. @param longitude the longitude of the map point. @param altitude the altitude of the map point.",
             "djilatlng",
             "creates a new `djilatlng` object with four related parameters.  @param latitude the latitude of the map point. @param longitude the longitude of the map point. @param altitude the altitude of the map point. @param accuracy the accuracy of the map point.",
             "djilatlng",
             "creates a new latlng object with five related parameters.  @param latitude the latitude of the map point. @param longitude the longitude of the map point. @param altitude the altitude of the map point. @param accuracy the accuracy of the map point. @param time the time of the map point.",
             "djilatlng",
             "creates a new latlng object with five related parameters.  @param latitude the latitude of the map point. @param longitude the longitude of the map point. @param altitude the altitude of the map point. @param accuracy the accuracy of the map point. @param time the time of the map point. @param elapsedrealtimenanos the time in elapsed real-time of the map point.",
             "getlatitude",
             "gets the latitude of the map point.  @return the latitude of the map point.",
             "setlatitude",
             "sets the latitude of the map point.  @param latitude the latitude of the map point.",
             "getlongitude",
             "gets the longitude of the map point.  @return the longitude of the map point.",
             "setlongitude",
             "sets the longitude of the map point.  @param longitude the longitude of the map point.",
             "getaltitude",
             "gets the altitude of the map point.  @return the altitude of the map point.",
             "getaccuracy",
             "gets the accuracy of the map point.  @return the accuracy of the map point.",
             "setaccuracy",
             "sets the accuracy of the map point.  @param accuracy the accuracy of the map point.",
             "gettime",
             "gets the time of the map point.  @return the time of the map point.",
             "settime",
             "sets the time of the map point.  @param time the accuracy of the point.",
             "getelapsedrealtimenanos",
             "gets the time in elapsed real-time of the map point.  @return the time in elapsed real-time of the point.",
             "setelapsedrealtimenanos",
             "sets the time in elapsed real-time of the map point.  @param elapsedrealtimenanos the time in elapsed real-time of the point.",
             "wifisignalwidget",
             "display: widget that displays the aircraft's wifi signal strength and channel.  usage: preferred aspect ratio: 1:1",
             "onwifisignalchange",
             "triggers when wifi signal changes.  @param signalvalue 0 - 100; 0 means no signal, 100 means the best of the signal strength.",
             "radarwidget",
             "widget to see obstacle detection radar for front, back, left, right,  and top of aircraft.",
             "histogramwidget",
             "widget to display histogram chart.",
             "gethistogramlinecolor",
             "line color of the histogram.  @return an int value of histogram line color.",
             "sethistogramlinecolor",
             "set line color of the histogram.  @param histogramlinecolor an int value of histogram line color.",
             "gethistogramfillcolor",
             "fill color of the histogram.  @return an int value of histogram fill color.",
             "sethistogramfillcolor",
             "set fill color of the histogram.  @param histogramfillcolor an int value of the histogram fill color.",
             "gethistogramgridcolor",
             "grid color of the histogram.  @return an int value of the histogram grid color.",
             "sethistogramgridcolor",
             "set grid color of the histogram.  @param histogramgridcolor an int value of the histogram grid color.",
             "gethistogrambackgroundcolor",
             "background color of the histogram.  @return an int value of the histogram background color.",
             "sethistogrambackgroundcolor",
             "set background color of the histogram.  @param histogrambackgroundcolor an int value of the histogram background color.",
             "isgriddrawn",
             "return `true` if grid needs to be drawn.  @return a boolean value to check if grid needs to be drawn.",
             "setshoulddrawgrid",
             "determine whether grid needs to be drawn.  @param shoulddrawgrid `true` if grid needs to be drawn.",
             "isdrawncubic",
             "return `true` if histogram should be drawn in cubic mode.  @return a boolean value to check if cubic needs to be drawn.",
             "setshoulddrawcubic",
             "determine whether cubic needs to be drawn.  @param shoulddrawcubic `true` if cubic needs to be drawn.",
             "isclosebuttonshown",
             "return `true` if histogram should show the close button.  @return a boolean value to check if histogram needs to show the close button.",
             "setshouldshowclosebutton",
             "determine whether histogram should show the close button.  @param shouldshowclosebutton `true` if histogram should show the close button.",
        ],
        "longSearchIndex": [
        ],
        "info": [
            [
                   "AutoExposureLockWidget",
                   2,
                   "/Widgets/AutoExposureLockWidget.html",
                   "",
                   "Display: A lock icon with two states shows whether the camera's AE (auto exposure) is locked or not.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping the lock icon will toggle the value of AE lock.",
            ],
            [
                   "Display: A lock icon with two states shows whether the camera's AE (auto exposure) is locked or not.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping the lock icon will toggle the value of AE lock.",
                   1,
                   "/Widgets/AutoExposureLockWidget.html",
                   "",
                   "",
            ],
            [
                   "onAELockChange",
                   2,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_onAELockChange_inline",
                   "Updates when AE Lock status has changed  @param isLocked true means AE is locked, false otherwise",
            ],
            [
                   "Updates when AE Lock status has changed  @param isLocked true means AE is locked, false otherwise",
                   1,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_onAELockChange_inline",
                   "",
            ],
            [
                   "performAELockAction",
                   2,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_performAELockAction_inline",
                   "Performs auto exposure lock action @see #`onAELockActionResult` to listen on the action result by overridding  @param isLock True if auto exposure is to be locked",
            ],
            [
                   "Performs auto exposure lock action @see #`onAELockActionResult` to listen on the action result by overridding  @param isLock True if auto exposure is to be locked",
                   1,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_performAELockAction_inline",
                   "",
            ],
            [
                   "onAELockActionResult",
                   2,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_onAELockActionResult_inline",
                   "Triggers when AE Lock action finishes  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when AE Lock action finishes  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/AutoExposureLockWidget.html",
                   "#AutoExposureLockWidget_onAELockActionResult_inline",
                   "",
            ],
            [
                   "PreFlightStatusWidget",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "",
                   "Display: The text shows a summary of the preflight checklist situation of the aircraft. The color of the background changes depends on how severe the situation is. Green indicates everything is ok. Yellow indicates something is at warning level. Red indicates something is wrong and aircraft won't take off.  Usage: Preferred Aspect Ratio: 238:33.  Interaction: Tapping on status text will toggle between show and hide `PreFlightCheckListPanel`.",
            ],
            [
                   "Display: The text shows a summary of the preflight checklist situation of the aircraft. The color of the background changes depends on how severe the situation is. Green indicates everything is ok. Yellow indicates something is at warning level. Red indicates something is wrong and aircraft won't take off.  Usage: Preferred Aspect Ratio: 238:33.  Interaction: Tapping on status text will toggle between show and hide `PreFlightCheckListPanel`.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "",
                   "",
            ],
            [
                   "ConnectionWidget",
                   2,
                   "/Widgets/DUXConnectionWidget.html",
                   "",
                   "Display: Widget has two states representing by two icons. Red triangle icon indicates there is no connection with the product. Green circle icon indicates there is connection with the product.  Usage: Preferred Aspect Ratio: 1:1.",
            ],
            [
                   "Display: Widget has two states representing by two icons. Red triangle icon indicates there is no connection with the product. Green circle icon indicates there is connection with the product.  Usage: Preferred Aspect Ratio: 1:1.",
                   1,
                   "/Widgets/DUXConnectionWidget.html",
                   "",
                   "",
            ],
            [
                   "FlightModeWidget",
                   2,
                   "/Widgets/DUXFlightModeWidget.html",
                   "",
                   "Display: The current flight mode of the aircraft. It uses the same language as DJIGo.  Usage: Preferred Aspect Ratio: 103:22.",
            ],
            [
                   "Display: The current flight mode of the aircraft. It uses the same language as DJIGo.  Usage: Preferred Aspect Ratio: 103:22.",
                   1,
                   "/Widgets/DUXFlightModeWidget.html",
                   "",
                   "",
            ],
            [
                   "onFlyControllerModeChange",
                   2,
                   "/Widgets/DUXFlightModeWidget.html",
                   "#DUXFlightModeWidget_onFlyControllerModeChange_inline",
                   "Triggers when flight controller's flight mode changes  @param flightMode Current flight controller flight mode",
            ],
            [
                   "Triggers when flight controller's flight mode changes  @param flightMode Current flight controller flight mode",
                   1,
                   "/Widgets/DUXFlightModeWidget.html",
                   "#DUXFlightModeWidget_onFlyControllerModeChange_inline",
                   "",
            ],
            [
                   "BatteryWidget",
                   2,
                   "/Widgets/DUXBatteryWidget.html",
                   "",
                   "<p> This widget is configurable to hide some of the subviews. Use the attribute excludeView with flags corresponding to each subview to hide.  Here are all the flags: <p> batteryIcon, percentage, singleVoltage, doubleVoltage</code>  <p> Note that multiple flags can be used simultaneously by logically OR'ing them. For example, if user wants to hide voltage subviews in the widget, it can be done by following two steps. <p> Define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> Then, add following attribute to the BatteryWidget: custom:excludeView=singleVoltage|doubleVoltage</code>  Display: Battery icon has two color states. White color indicates everything is ok. Icon will change into red color if aircraft needs to return home, land immediately, or battery connection is bad. Text shows percentage of charge remaining in battery. Text also has two color states. Green indicates the percentage is ok. Red indicates the percentage is either below or just enough for returning home or landing immediately.  Usage: Preferred Aspect Ratio: 28:11.",
            ],
            [
                   "<p> This widget is configurable to hide some of the subviews. Use the attribute excludeView with flags corresponding to each subview to hide.  Here are all the flags: <p> batteryIcon, percentage, singleVoltage, doubleVoltage</code>  <p> Note that multiple flags can be used simultaneously by logically OR'ing them. For example, if user wants to hide voltage subviews in the widget, it can be done by following two steps. <p> Define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> Then, add following attribute to the BatteryWidget: custom:excludeView=singleVoltage|doubleVoltage</code>  Display: Battery icon has two color states. White color indicates everything is ok. Icon will change into red color if aircraft needs to return home, land immediately, or battery connection is bad. Text shows percentage of charge remaining in battery. Text also has two color states. Green indicates the percentage is ok. Red indicates the percentage is either below or just enough for returning home or landing immediately.  Usage: Preferred Aspect Ratio: 28:11.",
                   1,
                   "/Widgets/DUXBatteryWidget.html",
                   "",
                   "",
            ],
            [
                   "onBatteryPercentageChange",
                   2,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onBatteryPercentageChange_inline",
                   "Triggers when battery percentage changes  @param percentage from 0 - 100; 0 means empty, 100 means full.",
            ],
            [
                   "Triggers when battery percentage changes  @param percentage from 0 - 100; 0 means empty, 100 means full.",
                   1,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onBatteryPercentageChange_inline",
                   "",
            ],
            [
                   "onBatteryConnectionStateChange",
                   2,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onBatteryConnectionStateChange_inline",
                   "Triggers when DJIBatteryConnectionState changes  @param status Normal, means the battery status is good, other values mean the battery is in error state.",
            ],
            [
                   "Triggers when DJIBatteryConnectionState changes  @param status Normal, means the battery status is good, other values mean the battery is in error state.",
                   1,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onBatteryConnectionStateChange_inline",
                   "",
            ],
            [
                   "onRemainingBatteryStateChange",
                   2,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onRemainingBatteryStateChange_inline",
                   "Triggers when warning level of battery changes  @param warningLevel Normal, means the battery energy is good. Low, means the battery energy is OK to go home. VeryLow, means the battery energy is only for landing immediately.",
            ],
            [
                   "Triggers when warning level of battery changes  @param warningLevel Normal, means the battery energy is good. Low, means the battery energy is OK to go home. VeryLow, means the battery energy is only for landing immediately.",
                   1,
                   "/Widgets/DUXBatteryWidget.html",
                   "#DUXBatteryWidget_onRemainingBatteryStateChange_inline",
                   "",
            ],
            [
                   "RemoteControlSignalWidget",
                   2,
                   "/Widgets/RemoteControllerSignalWidget.html",
                   "",
                   "Display: Icon with 5 vertical bars total represents the current signal strength between RC and aircraft.  Usage: Preferred Aspect Ratio: 19:11.",
            ],
            [
                   "Display: Icon with 5 vertical bars total represents the current signal strength between RC and aircraft.  Usage: Preferred Aspect Ratio: 19:11.",
                   1,
                   "/Widgets/RemoteControllerSignalWidget.html",
                   "",
                   "",
            ],
            [
                   "onRemoteControllerSignalStrengthChange",
                   2,
                   "/Widgets/RemoteControllerSignalWidget.html",
                   "#RemoteControllerSignalWidget_onRemoteControllerSignalStrengthChange_inline",
                   "Triggers when the value of remote controller signal strength changes  @param signalValue 0 - 100; 0 means no signal, 100 means the best signal strength.",
            ],
            [
                   "Triggers when the value of remote controller signal strength changes  @param signalValue 0 - 100; 0 means no signal, 100 means the best signal strength.",
                   1,
                   "/Widgets/RemoteControllerSignalWidget.html",
                   "#RemoteControllerSignalWidget_onRemoteControllerSignalStrengthChange_inline",
                   "",
            ],
            [
                   "GPSSignalWidget",
                   2,
                   "/Widgets/GPSSignalWidget.html",
                   "",
                   "Display: Small number on top of satellite icon shows the number of satellite available. 5 vertical bars represents the current GPS signal strength. Small 'R' letter shown or hidden indicates weather RTK is enabled or not.  Usage: Preferred Aspect Ratio: 21:11.",
            ],
            [
                   "Display: Small number on top of satellite icon shows the number of satellite available. 5 vertical bars represents the current GPS signal strength. Small 'R' letter shown or hidden indicates weather RTK is enabled or not.  Usage: Preferred Aspect Ratio: 21:11.",
                   1,
                   "/Widgets/GPSSignalWidget.html",
                   "",
                   "",
            ],
            [
                   "onGPSSignalStatusChange",
                   2,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onGPSSignalStatusChange_inline",
                   "Triggers when GPSSignalLevel changes  @param status status of the GPS signal quality. Level0 ~ Level5; Level0 means no signal, Level5 means the best signal quality.",
            ],
            [
                   "Triggers when GPSSignalLevel changes  @param status status of the GPS signal quality. Level0 ~ Level5; Level0 means no signal, Level5 means the best signal quality.",
                   1,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onGPSSignalStatusChange_inline",
                   "",
            ],
            [
                   "onRTKEnabled",
                   2,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onRTKEnabled_inline",
                   "Triggers when RTK is enabled or disabled  @param isRTKEnabled true means the RTK is enabled, false otherwise",
            ],
            [
                   "Triggers when RTK is enabled or disabled  @param isRTKEnabled true means the RTK is enabled, false otherwise",
                   1,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onRTKEnabled_inline",
                   "",
            ],
            [
                   "onSatelliteNumberChange",
                   2,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onSatelliteNumberChange_inline",
                   "Triggers when the number of available satellites changes  @param satelliteNum current number of available satellites",
            ],
            [
                   "Triggers when the number of available satellites changes  @param satelliteNum current number of available satellites",
                   1,
                   "/Widgets/GPSSignalWidget.html",
                   "#GPSSignalWidget_onSatelliteNumberChange_inline",
                   "",
            ],
            [
                   "VideoSignalWidget",
                   2,
                   "/Widgets/VideoSignalWidget.html",
                   "",
                   "Display: 5 vertical bars represents the current Video signal strength.  Usage: Preferred Aspect Ratio: 19:11.",
            ],
            [
                   "Display: 5 vertical bars represents the current Video signal strength.  Usage: Preferred Aspect Ratio: 19:11.",
                   1,
                   "/Widgets/VideoSignalWidget.html",
                   "",
                   "",
            ],
            [
                   "VisionWidget",
                   2,
                   "/Widgets/VisionWidget.html",
                   "",
                   "Display: Widget has two visual states to show if Visual Positioning is being used.   - White icon indicates Visual Positioning is being used.   - Red icon indicates Visual Positioning is not being used.  Usage: Preferred Aspect Ratio: 1:1.",
            ],
            [
                   "Display: Widget has two visual states to show if Visual Positioning is being used.   - White icon indicates Visual Positioning is being used.   - Red icon indicates Visual Positioning is not being used.  Usage: Preferred Aspect Ratio: 1:1.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "",
                   "",
            ],
            [
                   "onIsVisionUsedChange",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_onIsVisionUsedChange_inline",
                   "Triggers when the vision detection state changes  @param visionSystemStatus The status of the vision system. NORMAL means the vision system is working  and being used by flight controller. DISABLED or CLOSED means the vision sensor is not used.",
            ],
            [
                   "Triggers when the vision detection state changes  @param visionSystemStatus The status of the vision system. NORMAL means the vision system is working  and being used by flight controller. DISABLED or CLOSED means the vision sensor is not used.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_onIsVisionUsedChange_inline",
                   "",
            ],
            [
                   "VisionSystemStatus",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_inline",
                   "The status of the vision system.",
            ],
            [
                   "The status of the vision system.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_inline",
                   "",
            ],
            [
                   "CLOSED",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_CLOSED_inline",
                   "User avoidance is disabled by the user.",
            ],
            [
                   "User avoidance is disabled by the user.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_CLOSED_inline",
                   "",
            ],
            [
                   "DISABLED",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_DISABLED_inline",
                   "The vision system is disabled. This could be due to the flight mode, tap mode, tracking mode, or draw status.",
            ],
            [
                   "The vision system is disabled. This could be due to the flight mode, tap mode, tracking mode, or draw status.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_DISABLED_inline",
                   "",
            ],
            [
                   "NORMAL",
                   2,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_NORMAL_inline",
                   "The vision system is functioning normally.",
            ],
            [
                   "The vision system is functioning normally.",
                   1,
                   "/Widgets/VisionWidget.html",
                   "#VisionWidget_VisionSystemStatus_NORMAL_inline",
                   "",
            ],
            [
                   "DashboardWidget",
                   2,
                   "/Widgets/DUXDashboardWidget.html",
                   "",
                   "Display: Compound widget that aggregates important physical state information of the aircraft into a dashboard. It includes the circular `CompassWidget`, the `DistanceHomeWidget`, the `HorizontalVelocityWidget`, the `DistanceRCWidget`, the `VerticalVelocityWidget`, and the `AltitudeWidget`.  Usage: Preferred Aspect Ratio: 405:91.",
            ],
            [
                   "Display: Compound widget that aggregates important physical state information of the aircraft into a dashboard. It includes the circular `CompassWidget`, the `DistanceHomeWidget`, the `HorizontalVelocityWidget`, the `DistanceRCWidget`, the `VerticalVelocityWidget`, and the `AltitudeWidget`.  Usage: Preferred Aspect Ratio: 405:91.",
                   1,
                   "/Widgets/DUXDashboardWidget.html",
                   "",
                   "",
            ],
            [
                   "CompassWidget",
                   2,
                   "/Widgets/DUXCompassWidget.html",
                   "",
                   "Display: Compound widget that aggregates attitude and location data into one widget. The widget shows:   - Heading of the aircraft relative to the pilot   - True north relative to pilot and aircraft   - Roll and pitch of aircraft   - Yaw and pitch of gimbal   - Position of aircraft relative to pilot   - Distance of aircraft from pilot   - Home location  Usage: Preferred Aspect Ratio: 1:1. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Compound widget that aggregates attitude and location data into one widget. The widget shows:   - Heading of the aircraft relative to the pilot   - True north relative to pilot and aircraft   - Roll and pitch of aircraft   - Yaw and pitch of gimbal   - Position of aircraft relative to pilot   - Distance of aircraft from pilot   - Home location  Usage: Preferred Aspect Ratio: 1:1. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/DUXCompassWidget.html",
                   "",
                   "",
            ],
            [
                   "DistanceHomeWidget",
                   2,
                   "/Widgets/DistanceFromHomeWidget.html",
                   "",
                   "Display: Distance between current location of the aircraft and home in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Distance between current location of the aircraft and home in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/DistanceFromHomeWidget.html",
                   "",
                   "",
            ],
            [
                   "HorizontalVelocityWidget",
                   2,
                   "/Widgets/HorizontalVelocityWidget.html",
                   "",
                   "Display: Horizontal velocity of aircraft in m/s.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Horizontal velocity of aircraft in m/s.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/HorizontalVelocityWidget.html",
                   "",
                   "",
            ],
            [
                   "DistanceRCWidget",
                   2,
                   "/Widgets/DistanceFromRCWidget.html",
                   "",
                   "Display: Distance between current location of the aircraft and RC (pilot) in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Distance between current location of the aircraft and RC (pilot) in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/DistanceFromRCWidget.html",
                   "",
                   "",
            ],
            [
                   "VerticalVelocityWidget",
                   2,
                   "/Widgets/VerticalVelocityWidget.html",
                   "",
                   "Display: Text shows the aircraft's current vertical velocity in m/s. Arrow indicates whether the aircraft is going up or down.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Text shows the aircraft's current vertical velocity in m/s. Arrow indicates whether the aircraft is going up or down.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/VerticalVelocityWidget.html",
                   "",
                   "",
            ],
            [
                   "AltitudeWidget",
                   2,
                   "/Widgets/AltitudeWidget.html",
                   "",
                   "Display: Current altitude of the aircraft in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
            ],
            [
                   "Display: Current altitude of the aircraft in meters.  Usage: Preferred Aspect Ratio: 71:16. Check `DashboardWidget` for an example of its usage.",
                   1,
                   "/Widgets/AltitudeWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraControlsWidget",
                   2,
                   "/Widgets/CameraControlsWidget.html",
                   "",
                   "Display: Compound widget  Usage: Preferred Aspect Ratio: 30:128  Interaction: Tapping the Menu button will toggle between show and hide `CameraSettingAdvancedPanel`. Tapping the switch button will toggle camera mode between shoot photo and record video. Tapping the bottom button will toggle between show and hide `CameraSettingExposurePanel`. Full interaction with `CameraCaptureWidget`.",
            ],
            [
                   "Display: Compound widget  Usage: Preferred Aspect Ratio: 30:128  Interaction: Tapping the Menu button will toggle between show and hide `CameraSettingAdvancedPanel`. Tapping the switch button will toggle camera mode between shoot photo and record video. Tapping the bottom button will toggle between show and hide `CameraSettingExposurePanel`. Full interaction with `CameraCaptureWidget`.",
                   1,
                   "/Widgets/CameraControlsWidget.html",
                   "",
                   "",
            ],
            [
                   "PictureVideoSwitch",
                   2,
                   "/Widgets/PictureVideoSwitchWidget.html",
                   "",
                   "Display: A switch button shows weather the camera mode is in shoot photo or record video.  Usage: Preferred Aspect Ratio: 44:36. Check `CameraControlsWidget` for an example of its usage.  Interaction: Use switch button to toggle the camera mode.",
            ],
            [
                   "Display: A switch button shows weather the camera mode is in shoot photo or record video.  Usage: Preferred Aspect Ratio: 44:36. Check `CameraControlsWidget` for an example of its usage.  Interaction: Use switch button to toggle the camera mode.",
                   1,
                   "/Widgets/PictureVideoSwitchWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraCaptureWidget",
                   2,
                   "/Widgets/CameraCaptureWidget.html",
                   "",
                   "Display: In shooting photo, the widget can show the mode of photo will be taken and the related setting of that mode as following:   - Single mode.   - HDR mode.   - Burst mode and the number of burst shot will be taken.   - AEB mode and the number of shot will be taken.   - Interval mode.  Usage: Preferred Aspect Ratio: 3:4. Check `CameraControlsWidget` for an example of its usage.  Interaction: Tapping when in shoot photo mode will take a photo. Tapping when in record video mode will start/stop recording.",
            ],
            [
                   "Display: In shooting photo, the widget can show the mode of photo will be taken and the related setting of that mode as following:   - Single mode.   - HDR mode.   - Burst mode and the number of burst shot will be taken.   - AEB mode and the number of shot will be taken.   - Interval mode.  Usage: Preferred Aspect Ratio: 3:4. Check `CameraControlsWidget` for an example of its usage.  Interaction: Tapping when in shoot photo mode will take a photo. Tapping when in record video mode will start/stop recording.",
                   1,
                   "/Widgets/CameraCaptureWidget.html",
                   "",
                   "",
            ],
            [
                   "ExposureSettingsMenu",
                   2,
                   "/Widgets/ExposureSettingsMenu.html",
                   "",
                   "Usage: Preferred Aspect Ratio: 4:3. Check `CameraControlsWidget` for an example of its usage.  Interaction: Tapping the button will toggle between show and hide `CameraSettingExposurePanel`.",
            ],
            [
                   "Usage: Preferred Aspect Ratio: 4:3. Check `CameraControlsWidget` for an example of its usage.  Interaction: Tapping the button will toggle between show and hide `CameraSettingExposurePanel`.",
                   1,
                   "/Widgets/ExposureSettingsMenu.html",
                   "",
                   "",
            ],
            [
                   "RemainingFlightTimeWidget",
                   2,
                   "/Widgets/RemainingFlightTimeWidget.html",
                   "",
                   "Display: Has the same behavior as DJIGO's element. 1. The text inside white bubble shows the remaining flight time in minutes and seconds. 2. The middle line stretches along the width of the widget represents remaining battery percentage of the aircraft. If remaining battery is 100%, the line will cover the whole width of widget. If remaining battery is 0%, the line will disappear.   - Red part of the line represents the battery percentage needed   to land aircraft immediately.   - Yellow part of the line represents the battery percentage needed to   return aircraft home.   - Green part of the line represents the battery percentage left to fly safely. 3. The two white dots represent the two settable battery threshold.   - The first one from the left represents the land immediately threshold.   - The second one represents the go home threshold. 4. The `H` icon is an addition to yellow part of the line. It represents the battery percentage needed to go home.",
            ],
            [
                   "Display: Has the same behavior as DJIGO's element. 1. The text inside white bubble shows the remaining flight time in minutes and seconds. 2. The middle line stretches along the width of the widget represents remaining battery percentage of the aircraft. If remaining battery is 100%, the line will cover the whole width of widget. If remaining battery is 0%, the line will disappear.   - Red part of the line represents the battery percentage needed   to land aircraft immediately.   - Yellow part of the line represents the battery percentage needed to   return aircraft home.   - Green part of the line represents the battery percentage left to fly safely. 3. The two white dots represent the two settable battery threshold.   - The first one from the left represents the land immediately threshold.   - The second one represents the go home threshold. 4. The `H` icon is an addition to yellow part of the line. It represents the battery percentage needed to go home.",
                   1,
                   "/Widgets/RemainingFlightTimeWidget.html",
                   "",
                   "",
            ],
            [
                   "ColorWaveformWidget",
                   2,
                   "/Widgets/DULColorWaveformWidget.html",
                   "",
                   "Display: Widget to display color waveform of live video.",
            ],
            [
                   "Display: Widget to display color waveform of live video.",
                   1,
                   "/Widgets/DULColorWaveformWidget.html",
                   "",
                   "",
            ],
            [
                   "FPVWidget",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "",
                   "Display: The video feed from camera.  Usage: To allow user to interact with the video feed, use this widget in conjunction with ``FPVOverlayWidget",
            ],
            [
                   "Display: The video feed from camera.  Usage: To allow user to interact with the video feed, use this widget in conjunction with ``FPVOverlayWidget",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "",
                   "",
            ],
            [
                   "setVideoSource",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_setVideoSource_inline",
                   "User can set video source to these three options: AUTO, PRIMARY, SECONDARY. By default, the video source is set to AUTO if user does not specify it.  @param videoSource An enum value of `VideoSource`.",
            ],
            [
                   "User can set video source to these three options: AUTO, PRIMARY, SECONDARY. By default, the video source is set to AUTO if user does not specify it.  @param videoSource An enum value of `VideoSource`.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_setVideoSource_inline",
                   "",
            ],
            [
                   "getVideoSource",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_getVideoSource_inline",
                   "Retrieves the type of the video feed selection.  @return An enum value of `VideoSource`.",
            ],
            [
                   "Retrieves the type of the video feed selection.  @return An enum value of `VideoSource`.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_getVideoSource_inline",
                   "",
            ],
            [
                   "VideoSource",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_inline",
                   "Options for the user to select the video feed to associate with the FPVWidget. Please  be aware that the video feed can only associate with one FPVWidget object. If several  FPVWidget objects are associated with the same VideoSource, only the last one can get the live video.",
            ],
            [
                   "Options for the user to select the video feed to associate with the FPVWidget. Please  be aware that the video feed can only associate with one FPVWidget object. If several  FPVWidget objects are associated with the same VideoSource, only the last one can get the live video.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_AUTO_inline",
                   "Auto switch from PRIMARY video feed to SECONDARY video feed to show the DJICamera live video when connecting with M600, M600Pro, A3, or N3 product. It is PRIMARY video feed by default when connecting with other products.",
            ],
            [
                   "Auto switch from PRIMARY video feed to SECONDARY video feed to show the DJICamera live video when connecting with M600, M600Pro, A3, or N3 product. It is PRIMARY video feed by default when connecting with other products.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_AUTO_inline",
                   "",
            ],
            [
                   "PRIMARY",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_PRIMARY_inline",
                   "The first video feed of getVideoFeeds array list in VideoFeeder singleton object.",
            ],
            [
                   "The first video feed of getVideoFeeds array list in VideoFeeder singleton object.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_PRIMARY_inline",
                   "",
            ],
            [
                   "SECONDARY",
                   2,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_SECONDARY_inline",
                   "The second video feed of getVideoFeeds array list in VideoFeeder singleton object.",
            ],
            [
                   "The second video feed of getVideoFeeds array list in VideoFeeder singleton object.",
                   1,
                   "/Widgets/DULFPVWidget.html",
                   "#DULFPVWidget_VideoSource_SECONDARY_inline",
                   "",
            ],
            [
                   "FPVOverlayWidget",
                   2,
                   "/Widgets/FPVOverlayWidget.html",
                   "",
                   "Display: Single tap will show the selected target on top of the `FPVWidget`. Has two modes with two different icons.   - Focus mode will have a green square icon.   - Meter mode will have a yellow circle icon. Press and hold will show the gimbal control.   - Small white dot will stay at where user first tap the screen to indicate the anchor point.   - Blue circle will follow user's drag. Together with the anchor point, this dictates the gimbal movement. When grid mode is turned on (using the `CameraSettingAdvancedPanel`), this also shows the grid lines.  Usage: Should be the same size and placed on top of `FPVOverlayWidget`.  Interaction: Tapping in focus mode will select that point as focus target point. Tapping in meter mode will select that point as exposure meter target point. Press and hold will activate gimbal control mode. Dragging gimbal control will move the gimbal accordingly.",
            ],
            [
                   "Display: Single tap will show the selected target on top of the `FPVWidget`. Has two modes with two different icons.   - Focus mode will have a green square icon.   - Meter mode will have a yellow circle icon. Press and hold will show the gimbal control.   - Small white dot will stay at where user first tap the screen to indicate the anchor point.   - Blue circle will follow user's drag. Together with the anchor point, this dictates the gimbal movement. When grid mode is turned on (using the `CameraSettingAdvancedPanel`), this also shows the grid lines.  Usage: Should be the same size and placed on top of `FPVOverlayWidget`.  Interaction: Tapping in focus mode will select that point as focus target point. Tapping in meter mode will select that point as exposure meter target point. Press and hold will activate gimbal control mode. Dragging gimbal control will move the gimbal accordingly.",
                   1,
                   "/Widgets/FPVOverlayWidget.html",
                   "",
                   "",
            ],
            [
                   "TakeOffWidget",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "",
                   "Display: Widget has three states with three different interactions.  - White icon with arrow up indicates the aircraft is not flying and the widget interaction is to start taking off.  - White icon with arrow down indicates the aircraft is flying and the widget  interaction is to start landing.  - Red icon indicates the aircraft is landing and the widget interaction is  to cancel landing.  Usage: Preferred Aspect Ratio: 1:1 Widget needs to be in Activity context to show Dialog  Interaction: Tapping the widget will open up a Dialog to confirm the desired action. Slide the dialog from left to right to start the action.",
            ],
            [
                   "Display: Widget has three states with three different interactions.  - White icon with arrow up indicates the aircraft is not flying and the widget interaction is to start taking off.  - White icon with arrow down indicates the aircraft is flying and the widget  interaction is to start landing.  - Red icon indicates the aircraft is landing and the widget interaction is  to cancel landing.  Usage: Preferred Aspect Ratio: 1:1 Widget needs to be in Activity context to show Dialog  Interaction: Tapping the widget will open up a Dialog to confirm the desired action. Slide the dialog from left to right to start the action.",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "",
                   "",
            ],
            [
                   "onTakeOffStatusChange",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffStatusChange_inline",
                   "Triggers when take off status changes.  @param isTakingOff true if taking off, false otherwise",
            ],
            [
                   "Triggers when take off status changes.  @param isTakingOff true if taking off, false otherwise",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffStatusChange_inline",
                   "",
            ],
            [
                   "onLandingStatusChange",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingStatusChange_inline",
                   "Triggers when landing status changes.  @param isLanding true if in process of landing, false otherwise",
            ],
            [
                   "Triggers when landing status changes.  @param isLanding true if in process of landing, false otherwise",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingStatusChange_inline",
                   "",
            ],
            [
                   "performTakeOffAction",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performTakeOffAction_inline",
                   "Performs take off action @see #`onTakeOffActionResult` to listen on the action result by overridding",
            ],
            [
                   "Performs take off action @see #`onTakeOffActionResult` to listen on the action result by overridding",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performTakeOffAction_inline",
                   "",
            ],
            [
                   "performLandingAction",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performLandingAction_inline",
                   "Performs landing action @see #`onLandingActionResult` to listen on the action result by overridding",
            ],
            [
                   "Performs landing action @see #`onLandingActionResult` to listen on the action result by overridding",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performLandingAction_inline",
                   "",
            ],
            [
                   "performCancelLandingAction",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performCancelLandingAction_inline",
                   "Performs cancel landing action @see #`onCancelLandingActionResult` to listen on the action result by overridding",
            ],
            [
                   "Performs cancel landing action @see #`onCancelLandingActionResult` to listen on the action result by overridding",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performCancelLandingAction_inline",
                   "",
            ],
            [
                   "performLandingConfirmationAction",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performLandingConfirmationAction_inline",
                   "Performs the landing confirmation action. This allows aircraft to land when landing  confirmation is received.",
            ],
            [
                   "Performs the landing confirmation action. This allows aircraft to land when landing  confirmation is received.",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_performLandingConfirmationAction_inline",
                   "",
            ],
            [
                   "onTakeOffActionResult",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffActionResult_inline",
                   "Triggers when take off action completes @see #`performTakeOffAction`  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when take off action completes @see #`performTakeOffAction`  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffActionResult_inline",
                   "",
            ],
            [
                   "onLandingActionResult",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingActionResult_inline",
                   "Triggers when landing action completes @see #`performLandingAction`  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when landing action completes @see #`performLandingAction`  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingActionResult_inline",
                   "",
            ],
            [
                   "onCancelLandingActionResult",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onCancelLandingActionResult_inline",
                   "Triggers when cancel landing action completes @see #`performCancelLandingAction`  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when cancel landing action completes @see #`performCancelLandingAction`  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onCancelLandingActionResult_inline",
                   "",
            ],
            [
                   "onLandingConfirmedResult",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingConfirmedResult_inline",
                   "Triggers when confirm landing action completes.  @param error error object, or null if no error has occurred.",
            ],
            [
                   "Triggers when confirm landing action completes.  @param error error object, or null if no error has occurred.",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onLandingConfirmedResult_inline",
                   "",
            ],
            [
                   "onTakeOffEnable",
                   2,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffEnable_inline",
                   "Triggers when TakeOff Widget changes between being enabled or not.  @param enabled Current state that is true if button is enabled.",
            ],
            [
                   "Triggers when TakeOff Widget changes between being enabled or not.  @param enabled Current state that is true if button is enabled.",
                   1,
                   "/Widgets/TakeOffLandWidget.html",
                   "#TakeOffLandWidget_onTakeOffEnable_inline",
                   "",
            ],
            [
                   "ReturnHomeWidget",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "",
                   "Display: Widget has two states with two different interactions.  - White icon with arrow down indicates the aircraft is flying and the widget  interaction is to start returning home.  - Red icon indicates the aircraft is returning home and the widget interaction is  to cancel returning home.  Usage: Preferred Aspect Ratio: 1:1. Widget needs to be in Activity context for showing Dialog  Interaction: Tapping the widget will open up a Dialog to confirm the desired action. Slide the dialog from left to right to start the action.",
            ],
            [
                   "Display: Widget has two states with two different interactions.  - White icon with arrow down indicates the aircraft is flying and the widget  interaction is to start returning home.  - Red icon indicates the aircraft is returning home and the widget interaction is  to cancel returning home.  Usage: Preferred Aspect Ratio: 1:1. Widget needs to be in Activity context for showing Dialog  Interaction: Tapping the widget will open up a Dialog to confirm the desired action. Slide the dialog from left to right to start the action.",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "",
                   "",
            ],
            [
                   "performReturnHomeAction",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_performReturnHomeAction_inline",
                   "Performs return home action. @see #`onReturnHomeActionResult` for result of action by overridding",
            ],
            [
                   "Performs return home action. @see #`onReturnHomeActionResult` for result of action by overridding",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_performReturnHomeAction_inline",
                   "",
            ],
            [
                   "onReturnHomeActionResult",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_onReturnHomeActionResult_inline",
                   "Triggers when return home action completes @see #`performReturnHomeAction`  @param error null means success, otherwise error object returns",
            ],
            [
                   "Triggers when return home action completes @see #`performReturnHomeAction`  @param error null means success, otherwise error object returns",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_onReturnHomeActionResult_inline",
                   "",
            ],
            [
                   "performCancelReturnHomeAction",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_performCancelReturnHomeAction_inline",
                   "Perform cancel return home action @see #`onCancelReturnHomeActionResult`",
            ],
            [
                   "Perform cancel return home action @see #`onCancelReturnHomeActionResult`",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_performCancelReturnHomeAction_inline",
                   "",
            ],
            [
                   "onCancelReturnHomeActionResult",
                   2,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_onCancelReturnHomeActionResult_inline",
                   "Triggers when cancel return home action completes @see #`performCancelReturnHomeAction`  @param error null means success, otherwise error object returns",
            ],
            [
                   "Triggers when cancel return home action completes @see #`performCancelReturnHomeAction`  @param error null means success, otherwise error object returns",
                   1,
                   "/Widgets/ReturnHomeWidget.html",
                   "#ReturnHomeWidget_onCancelReturnHomeActionResult_inline",
                   "",
            ],
            [
                   "ManualFocusWidget",
                   2,
                   "/Widgets/ManualFocusWidget.html",
                   "",
                   "Display: Allows the focus distance to be set manually by using a slider. Macro and infinity buttons can also be clicked to set focus distance to those values.  Usage: Preferred Aspect Ratio: 36:7.",
            ],
            [
                   "Display: Allows the focus distance to be set manually by using a slider. Macro and infinity buttons can also be clicked to set focus distance to those values.  Usage: Preferred Aspect Ratio: 36:7.",
                   1,
                   "/Widgets/ManualFocusWidget.html",
                   "",
                   "",
            ],
            [
                   "FocusModeWidget",
                   2,
                   "/Widgets/FocusModeWidget.html",
                   "",
                   "Display: Shows the current focus mode of aircraft camera.   - MF text highlighted (in green) indicates focus mode is MF.   - AF text highlighted (in green) indicates focus mode is AF.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping will toggle between AF and MF mode.",
            ],
            [
                   "Display: Shows the current focus mode of aircraft camera.   - MF text highlighted (in green) indicates focus mode is MF.   - AF text highlighted (in green) indicates focus mode is AF.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping will toggle between AF and MF mode.",
                   1,
                   "/Widgets/FocusModeWidget.html",
                   "",
                   "",
            ],
            [
                   "onFocusModeChange",
                   2,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_onFocusModeChange_inline",
                   "Triggers when FocusMode has changed  @param focusMode Camera focus mode enum",
            ],
            [
                   "Triggers when FocusMode has changed  @param focusMode Camera focus mode enum",
                   1,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_onFocusModeChange_inline",
                   "",
            ],
            [
                   "performFocusModeAction",
                   2,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_performFocusModeAction_inline",
                   "Performs the FocusMode change action. @see #`onFocusModeActionResult` to listen on the action result by overridding  @param mode FocusMode enum value",
            ],
            [
                   "Performs the FocusMode change action. @see #`onFocusModeActionResult` to listen on the action result by overridding  @param mode FocusMode enum value",
                   1,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_performFocusModeAction_inline",
                   "",
            ],
            [
                   "onFocusModeActionResult",
                   2,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_onFocusModeActionResult_inline",
                   "Triggers when focus mode action completes.  @param error error object, or null if no error has occurred",
            ],
            [
                   "Triggers when focus mode action completes.  @param error error object, or null if no error has occurred",
                   1,
                   "/Widgets/FocusModeWidget.html",
                   "#FocusModeWidget_onFocusModeActionResult_inline",
                   "",
            ],
            [
                   "FocusExposureSwitchWidget",
                   2,
                   "/Widgets/ExposureFocusSwitchWidget.html",
                   "",
                   "Display: Widget has two visual states to indicate the current tapping interaction mode with `FPVOverlayWidget`.   - Green square indicates focus mode. In this mode, tapping on   `FPVOverlayWidget` will select a target focus point.   - Yellow circle indicates meter mode. In this mode, tapping on   `FPVOverlayWidget` will select a exposure metering target point.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping will toggle between Focus and Meter mode.",
            ],
            [
                   "Display: Widget has two visual states to indicate the current tapping interaction mode with `FPVOverlayWidget`.   - Green square indicates focus mode. In this mode, tapping on   `FPVOverlayWidget` will select a target focus point.   - Yellow circle indicates meter mode. In this mode, tapping on   `FPVOverlayWidget` will select a exposure metering target point.  Usage: Preferred Aspect Ratio: 1:1  Interaction: Tapping will toggle between Focus and Meter mode.",
                   1,
                   "/Widgets/ExposureFocusSwitchWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigShutterWidget",
                   2,
                   "/Widgets/CameraConfigShutterWidget.html",
                   "",
                   "Display: Camera's current shutter speed setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current shutter speed setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraConfigShutterWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigApertureWidget",
                   2,
                   "/Widgets/CameraConfigApertureWidget.html",
                   "",
                   "Display: Camera's current aperture setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current aperture setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraConfigApertureWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigISOAndEIWidget",
                   2,
                   "/Widgets/CameraConfigISOWidget.html",
                   "",
                   "Display: Camera's current ISO setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current ISO setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraConfigISOWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigWBWidget",
                   2,
                   "/Widgets/CameraConfigWBWidget.html",
                   "",
                   "Display: Camera's current White Balance setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current White Balance setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraConfigWBWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigStorageWidget",
                   2,
                   "/Widgets/CameraConfigStorageWidget.html",
                   "",
                   "Display: First text from the left shows format/resolution of photo/video that camera wil capture. Second text shows how many shots can be taken, or how many minutes can be recorded.  Usage: Preferred Aspect Ratio: 13:3.",
            ],
            [
                   "Display: First text from the left shows format/resolution of photo/video that camera wil capture. Second text shows how many shots can be taken, or how many minutes can be recorded.  Usage: Preferred Aspect Ratio: 13:3.",
                   1,
                   "/Widgets/CameraConfigStorageWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigSSDWidget",
                   2,
                   "/Widgets/CameraConfigSSDWidget.html",
                   "",
                   "Usage: Shows SSD Video format, clip name, license, and capacity info.",
            ],
            [
                   "Usage: Shows SSD Video format, clip name, license, and capacity info.",
                   1,
                   "/Widgets/CameraConfigSSDWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraConfigEVWidget",
                   2,
                   "/Widgets/CameraEVConfigWidget.html",
                   "",
                   "Display: Camera's current EV setting.  Usage: Preferred Aspect Ratio: 2:1.",
            ],
            [
                   "Display: Camera's current EV setting.  Usage: Preferred Aspect Ratio: 2:1.",
                   1,
                   "/Widgets/CameraEVConfigWidget.html",
                   "",
                   "",
            ],
            [
                   "CameraSettingAdvancedPanel",
                   2,
                   "/Widgets/CameraSettingAdvancedPanel.html",
                   "",
                   "Display: This panel shows all the camera settings that are not related to exposure. It is segmented in three parts:     - Picture Settings     - Video Settings     - Common Settings  Usage: Preferred Aspect Ratio: 53:79. To allow user to toggle hide and show this panel, use in conjunction with `CameraControlsWidget`  Interaction: All the settings are presented in ListView hierarchy.",
            ],
            [
                   "Display: This panel shows all the camera settings that are not related to exposure. It is segmented in three parts:     - Picture Settings     - Video Settings     - Common Settings  Usage: Preferred Aspect Ratio: 53:79. To allow user to toggle hide and show this panel, use in conjunction with `CameraControlsWidget`  Interaction: All the settings are presented in ListView hierarchy.",
                   1,
                   "/Widgets/CameraSettingAdvancedPanel.html",
                   "",
                   "",
            ],
            [
                   "CameraSettingExposurePanel",
                   2,
                   "/Widgets/CameraSettingExposurePanel.html",
                   "",
                   "Display: This panel shows all the camera settings that are related to exposure. It allows exposure mode selection (auto, aperture priority, shutter priority and manual) depending on the connected camera. Depending on the mode, the ISO, aperture, shutter speed and exposure compensation value can also be set.  Usage: Preferred Aspect Ratio: 211:316. To allow user to toggle hide and show this panel, use in conjunction with `CameraControlsWidget`  Interaction: All the settings are presented in ListView hierarchy.",
            ],
            [
                   "Display: This panel shows all the camera settings that are related to exposure. It allows exposure mode selection (auto, aperture priority, shutter priority and manual) depending on the connected camera. Depending on the mode, the ISO, aperture, shutter speed and exposure compensation value can also be set.  Usage: Preferred Aspect Ratio: 211:316. To allow user to toggle hide and show this panel, use in conjunction with `CameraControlsWidget`  Interaction: All the settings are presented in ListView hierarchy.",
                   1,
                   "/Widgets/CameraSettingExposurePanel.html",
                   "",
                   "",
            ],
            [
                   "RTKStatusPanel",
                   2,
                   "/Widgets/RTKStatusPanel.html",
                   "",
                   "Display: This panel shows all the information related to RTK.  This includes coordinates and altitude of the aircraft and base station, course angle, GLONASS, Beidou and GPS satellite counts for both antennas and the base station, and overall status of the RTK system.  Interaction: RTK can be toggled using a switch at the top of the panel.",
            ],
            [
                   "Display: This panel shows all the information related to RTK.  This includes coordinates and altitude of the aircraft and base station, course angle, GLONASS, Beidou and GPS satellite counts for both antennas and the base station, and overall status of the RTK system.  Interaction: RTK can be toggled using a switch at the top of the panel.",
                   1,
                   "/Widgets/RTKStatusPanel.html",
                   "",
                   "",
            ],
            [
                   "CompassCalibratingWorkFlow",
                   2,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "",
                   "Display: The progress of compas calibration.  Usage: To step the user through the compass calibration process  Interaction: Depends on the step, there will be buttons at the bottom of the dialog for the user to interact. The user can either quit out of or continue with the process.",
            ],
            [
                   "Display: The progress of compas calibration.  Usage: To step the user through the compass calibration process  Interaction: Depends on the step, there will be buttons at the bottom of the dialog for the user to interact. The user can either quit out of or continue with the process.",
                   1,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "",
                   "",
            ],
            [
                   "startCalibration",
                   2,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "#CompassCalibratingWorkFlow_startCalibration_inline",
                   "Call this to send the start calibration command to the aircraft. As soon as the aircraft sends back the progress data, a dialog will show up to guide the user through the process.  @param callback ActionCallback.",
            ],
            [
                   "Call this to send the start calibration command to the aircraft. As soon as the aircraft sends back the progress data, a dialog will show up to guide the user through the process.  @param callback ActionCallback.",
                   1,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "#CompassCalibratingWorkFlow_startCalibration_inline",
                   "",
            ],
            [
                   "stopCalibration",
                   2,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "#CompassCalibratingWorkFlow_stopCalibration_inline",
                   "Call this to send the stop calibration command to the aircraft.  @param callback ActionCallback.",
            ],
            [
                   "Call this to send the stop calibration command to the aircraft.  @param callback ActionCallback.",
                   1,
                   "/Widgets/CompassCalibratingWorkFlow.html",
                   "#CompassCalibratingWorkFlow_stopCalibration_inline",
                   "",
            ],
            [
                   "PreFlightCheckListPanel",
                   2,
                   "/Widgets/PreFlightCheckListPanel.html",
                   "",
                   "To allow user to toggle hide and show this panel, use in conjunction with `PreFlightStatusWidget`  Display: Panel that shows the preflight checklist that includes a list of items (like IMU, GPS etc) and their state that roll up into an overall state. <p> This panel is configurable to hide some of the items. Use the attribute excludeItem with flags corresponding to each item to hide.  Here are all the flags: <p> overall, flightMode, compass, IMUStatus, ESCStatus, visionSensors, radioChannelQuality, remoteControllerMode, aircraftBattery, remoteControllerBattery, aircraftBatteryTemperature, remainingStorageCapacity, gimbalStatus</code>  <p> Note that multiple flags can be used simultaneously by logically OR'ing them. For example, if user wants to hide aircraft battery temperature item ad ESC Status item in the panel, it can be done by following two steps. <p> Define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> Then, add following attribute to the PreFlightCheckListPanel: custom:excludeItem=aircraftBatteryTemperature|ESCStatus</code>  Interaction: All the settings are presented in ListView hierarchy.",
            ],
            [
                   "To allow user to toggle hide and show this panel, use in conjunction with `PreFlightStatusWidget`  Display: Panel that shows the preflight checklist that includes a list of items (like IMU, GPS etc) and their state that roll up into an overall state. <p> This panel is configurable to hide some of the items. Use the attribute excludeItem with flags corresponding to each item to hide.  Here are all the flags: <p> overall, flightMode, compass, IMUStatus, ESCStatus, visionSensors, radioChannelQuality, remoteControllerMode, aircraftBattery, remoteControllerBattery, aircraftBatteryTemperature, remainingStorageCapacity, gimbalStatus</code>  <p> Note that multiple flags can be used simultaneously by logically OR'ing them. For example, if user wants to hide aircraft battery temperature item ad ESC Status item in the panel, it can be done by following two steps. <p> Define custom xmlns in its layout file: xmlns:custom=http://schemas.android.com/apk/res-auto</code> <p> Then, add following attribute to the PreFlightCheckListPanel: custom:excludeItem=aircraftBatteryTemperature|ESCStatus</code>  Interaction: All the settings are presented in ListView hierarchy.",
                   1,
                   "/Widgets/PreFlightCheckListPanel.html",
                   "",
                   "",
            ],
            [
                   "onVideoSignalStrengthChange",
                   2,
                   "/Widgets/VideoSignalWidget.html",
                   "#VideoSignalWidget_onVideoSignalStrengthChange_inline",
                   "Triggers when the value of the video signal strength changes.  @param signalValue 0 - 100; 0 means no signal, 100 means the best signal strength;",
            ],
            [
                   "Triggers when the value of the video signal strength changes.  @param signalValue 0 - 100; 0 means no signal, 100 means the best signal strength;",
                   1,
                   "/Widgets/VideoSignalWidget.html",
                   "#VideoSignalWidget_onVideoSignalStrengthChange_inline",
                   "",
            ],
            [
                   "StatusType",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_inline",
                   "Pre-flight status types.",
            ],
            [
                   "Pre-flight status types.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_inline",
                   "",
            ],
            [
                   "OFFLINE",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_offline_inline",
                   "The pre-flight status type is offline.",
            ],
            [
                   "The pre-flight status type is offline.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_offline_inline",
                   "",
            ],
            [
                   "GOOD",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_good_inline",
                   "The pre-flight status type is good.",
            ],
            [
                   "The pre-flight status type is good.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_good_inline",
                   "",
            ],
            [
                   "WARNING",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_warning_inline",
                   "The pre-flight status type is warning.",
            ],
            [
                   "The pre-flight status type is warning.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_warning_inline",
                   "",
            ],
            [
                   "ERROR",
                   2,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_error_inline",
                   "The pre-flight status type is error.",
            ],
            [
                   "The pre-flight status type is error.",
                   1,
                   "/Widgets/PreFlightStatusWidget.html",
                   "#PreFlightStatusWidget_StatusType_error_inline",
                   "",
            ],
            [
                   "MapWidget",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "",
                   "Display: Widget that displays the aircraft's state and information on the map this includes aircraft location, home location, aircraft trail path, aircraft heading, and No Fly Zones.  Usage: Preferred Aspect Ratio: 1:1",
            ],
            [
                   "Display: Widget that displays the aircraft's state and information on the map this includes aircraft location, home location, aircraft trail path, aircraft heading, and No Fly Zones.  Usage: Preferred Aspect Ratio: 1:1",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "",
                   "",
            ],
            [
                   "initHereMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initHereMap_inline",
                   "Initializes the MapWidget with Here Maps. Note: Here Maps currently only works on arm v7 devices,  and you must sign up for their premium package.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
            ],
            [
                   "Initializes the MapWidget with Here Maps. Note: Here Maps currently only works on arm v7 devices,  and you must sign up for their premium package.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initHereMap_inline",
                   "",
            ],
            [
                   "initGoogleMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initGoogleMap_inline",
                   "Initializes the MapWidget with Google Maps.  Note: Google Maps only works on devices with Google  Play Services (not Crystal Sky).  Important: The following lifecycle methods in your activity must call  the corresponding methods in MapWidget in order for the map to render correctly: {@link #onCreate(Bundle)},  {@link #onResume()}, {@link #onPause()}, {@link #onDestroy()}, {@link #onSaveInstanceState(Bundle)}, and {@link #onLowMemory()}.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
            ],
            [
                   "Initializes the MapWidget with Google Maps.  Note: Google Maps only works on devices with Google  Play Services (not Crystal Sky).  Important: The following lifecycle methods in your activity must call  the corresponding methods in MapWidget in order for the map to render correctly: {@link #onCreate(Bundle)},  {@link #onResume()}, {@link #onPause()}, {@link #onDestroy()}, {@link #onSaveInstanceState(Bundle)}, and {@link #onLowMemory()}.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initGoogleMap_inline",
                   "",
            ],
            [
                   "initAMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initAMap_inline",
                   "Initializes the MapWidget with AMaps.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
            ],
            [
                   "Initializes the MapWidget with AMaps.  @param listener The OnMapReadyListener which will invoke the onMapReady method when the map has finished initializing.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_initAMap_inline",
                   "",
            ],
            [
                   "getMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getMap_inline",
                   "Get the DJIMap object.  @return A DJIMap object.",
            ],
            [
                   "Get the DJIMap object.  @return A DJIMap object.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_getMap_inline",
                   "",
            ],
            [
                   "setFlyZoneVisibility",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneVisibility_inline",
                   "Set selected fly zone visibility on the map.  @param flyZoneCategory Represents the category of flyzone to show/hide. @param isVisible `true` to show fly zones.",
            ],
            [
                   "Set selected fly zone visibility on the map.  @param flyZoneCategory Represents the category of flyzone to show/hide. @param isVisible `true` to show fly zones.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlyZoneVisibility_inline",
                   "",
            ],
            [
                   "hideAllFlyZones",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideAllFlyZones_inline",
                   "Hides all fly zones.",
            ],
            [
                   "Hides all fly zones.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideAllFlyZones_inline",
                   "",
            ],
            [
                   "clearFlightPath",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_clearFlightPath_inline",
                   "Clears the flight path up to the current location.",
            ],
            [
                   "Clears the flight path up to the current location.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_clearFlightPath_inline",
                   "",
            ],
            [
                   "hideFlightPath",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideFlightPath_inline",
                   "Hides the flight path if it is visible.",
            ],
            [
                   "Hides the flight path if it is visible.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideFlightPath_inline",
                   "",
            ],
            [
                   "setFlightPathColor",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlightPathColor_inline",
                   "Sets the color of the flight path.  @param color The color of the flight path.",
            ],
            [
                   "Sets the color of the flight path.  @param color The color of the flight path.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setFlightPathColor_inline",
                   "",
            ],
            [
                   "setMapCenterLock",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setMapCenterLock_inline",
                   "Sets the lock on the aircraft or the home location to be in center.  @param mapCenterLock Parameter to select the mode of centering.",
            ],
            [
                   "Sets the lock on the aircraft or the home location to be in center.  @param mapCenterLock Parameter to select the mode of centering.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setMapCenterLock_inline",
                   "",
            ],
            [
                   "setAutoFrameMap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAutoFrameMap_inline",
                   "Keeps the home location and the aircraft location visible and adjust the map bounds when set true.  @param isEnabled Parameter to enable or disable the map bounds lock.",
            ],
            [
                   "Keeps the home location and the aircraft location visible and adjust the map bounds when set true.  @param isEnabled Parameter to enable or disable the map bounds lock.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAutoFrameMap_inline",
                   "",
            ],
            [
                   "showHome",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showHome_inline",
                   "Shows the home marker if present on the map.",
            ],
            [
                   "Shows the home marker if present on the map.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showHome_inline",
                   "",
            ],
            [
                   "hideHome",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideHome_inline",
                   "Hides the home marker if present on the map.",
            ],
            [
                   "Hides the home marker if present on the map.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideHome_inline",
                   "",
            ],
            [
                   "showGimbalAttitude",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showGimbalAttitude_inline",
                   "Show the gimbal attitude values.",
            ],
            [
                   "Show the gimbal attitude values.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showGimbalAttitude_inline",
                   "",
            ],
            [
                   "hideGimbalAttitude",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideGimbalAttitude_inline",
                   "Hide the gimbal attitude values.",
            ],
            [
                   "Hide the gimbal attitude values.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideGimbalAttitude_inline",
                   "",
            ],
            [
                   "hideDirectionToHome",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideDirectionToHome_inline",
                   "Hides the path from aircraft to home point if visible.",
            ],
            [
                   "Hides the path from aircraft to home point if visible.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_hideDirectionToHome_inline",
                   "",
            ],
            [
                   "setAircraftBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAircraftBitmap_inline",
                   "Changes the icon of the aircraft marker.  @param bitmap The image to be set to.",
            ],
            [
                   "Changes the icon of the aircraft marker.  @param bitmap The image to be set to.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setAircraftBitmap_inline",
                   "",
            ],
            [
                   "setHomeBitmap",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setHomeBitmap_inline",
                   "Changes the icon of the home marker.  @param bitmap The image to be set to.",
            ],
            [
                   "Changes the icon of the home marker.  @param bitmap The image to be set to.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_setHomeBitmap_inline",
                   "",
            ],
            [
                   "OnMapReadyListener",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_OnMapReadyListener_inline",
                   "When added to the MapWidget, the OnMapReadyListener can be used to  determine when the map is ready to modify. No modifications should  be done to the MapWidget before the map is initialized using one  of the initialization methods.",
            ],
            [
                   "When added to the MapWidget, the OnMapReadyListener can be used to  determine when the map is ready to modify. No modifications should  be done to the MapWidget before the map is initialized using one  of the initialization methods.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_OnMapReadyListener_inline",
                   "",
            ],
            [
                   "onMapReady",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_onMapReadyCallback_inline",
                   "A callback indicating that the map is finished initializing.  @param map The object of `DJIMap`.",
            ],
            [
                   "A callback indicating that the map is finished initializing.  @param map The object of `DJIMap`.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_onMapReadyCallback_inline",
                   "",
            ],
            [
                   "MapCenterLock",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_inline",
                   "Map Centering Options.",
            ],
            [
                   "Map Centering Options.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_NONE_inline",
                   "This will disable the centering of map on any markers.",
            ],
            [
                   "This will disable the centering of map on any markers.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_NONE_inline",
                   "",
            ],
            [
                   "AIRCRAFT",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_AIRCRAFT_inline",
                   "This will keep the aircraft icon always in center of the screen and keep following it during flight.",
            ],
            [
                   "This will keep the aircraft icon always in center of the screen and keep following it during flight.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_AIRCRAFT_inline",
                   "",
            ],
            [
                   "HOME",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_HOME_inline",
                   "This will keep the home icon always in center of the screen. The aircraft icon will disappear from view bounds if the aircraft travels that distance",
            ],
            [
                   "This will keep the home icon always in center of the screen. The aircraft icon will disappear from view bounds if the aircraft travels that distance",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_MapCenterLock_HOME_inline",
                   "",
            ],
            [
                   "showDirectionToHome",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showDirectionToHome_inline",
                   "Shows the path from aircraft to home point if not already visible.",
            ],
            [
                   "Shows the path from aircraft to home point if not already visible.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showDirectionToHome_inline",
                   "",
            ],
            [
                   "showAllFlyZones",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showAllFlyZones_inline",
                   "Make all Fly zones visible on the map.",
            ],
            [
                   "Make all Fly zones visible on the map.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showAllFlyZones_inline",
                   "",
            ],
            [
                   "showFlightPath",
                   2,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showFlightPath_inline",
                   "Makes flight path visible if it's not visible.",
            ],
            [
                   "Makes flight path visible if it's not visible.",
                   1,
                   "/Widgets/DUXMapWidget.html",
                   "#DUXMapWidget_showFlightPath_inline",
                   "",
            ],
            [
                   "DJIMap",
                   2,
                   "/Widgets/DJIMap.html",
                   "",
                   "The public interface of map object.",
            ],
            [
                   "The public interface of map object.",
                   1,
                   "/Widgets/DJIMap.html",
                   "",
                   "",
            ],
            [
                   "addMarker",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addMarker_inline",
                   "Adds a marker to this map.  @param markerOptions Describes how to create the marker.  @return The marker that was added to the map.",
            ],
            [
                   "Adds a marker to this map.  @param markerOptions Describes how to create the marker.  @return The marker that was added to the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_addMarker_inline",
                   "",
            ],
            [
                   "setOnCameraChangeListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnCameraChangeListener_inline",
                   "Sets the `OnCameraChangeListener` which can listen to camera changes.  @param listener The listener that is added to this map.",
            ],
            [
                   "Sets the `OnCameraChangeListener` which can listen to camera changes.  @param listener The listener that is added to this map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnCameraChangeListener_inline",
                   "",
            ],
            [
                   "removeAllOnCameraChangeListeners",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeAllOnCameraChangeListeners_inline",
                   "Removes all instances of `OnCameraChangeListener` from the map.",
            ],
            [
                   "Removes all instances of `OnCameraChangeListener` from the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeAllOnCameraChangeListeners_inline",
                   "",
            ],
            [
                   "removeOnMarkerClickListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMarkerClickListener_inline",
                   "Removes the `` from the map.",
            ],
            [
                   "Removes the `` from the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMarkerClickListener_inline",
                   "",
            ],
            [
                   "setCameraPosition",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setCameraPosition_inline",
                   "Sets the camera position.  @param cameraPosition The camera position.",
            ],
            [
                   "Sets the camera position.  @param cameraPosition The camera position.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setCameraPosition_inline",
                   "",
            ],
            [
                   "getCameraPosition",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_getCameraPosition_inline",
                   "Gets the camera position.  @return The `DJICameraPosition` object.",
            ],
            [
                   "Gets the camera position.  @return The `DJICameraPosition` object.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_getCameraPosition_inline",
                   "",
            ],
            [
                   "setMapType",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setMapType_inline",
                   "Sets the map type of this map.  @param type The map type that the map will be set to.",
            ],
            [
                   "Sets the map type of this map.  @param type The map type that the map will be set to.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setMapType_inline",
                   "",
            ],
            [
                   "setOnMarkerClickListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMarkerClickListener_inline",
                   "Sets the `` which can listen click events on the map's markers.  @param listener The listener that is added to this map.",
            ],
            [
                   "Sets the `` which can listen click events on the map's markers.  @param listener The listener that is added to this map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMarkerClickListener_inline",
                   "",
            ],
            [
                   "setOnMapClickListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMapClickListener_inline",
                   "Sets the ``.  @param listener The listener that is added to this map.",
            ],
            [
                   "Sets the ``.  @param listener The listener that is added to this map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_setOnMapClickListener_inline",
                   "",
            ],
            [
                   "removeOnMapClickListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMapClickListener_inline",
                   "Removes the `` from the map.",
            ],
            [
                   "Removes the `` from the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_removeOnMapClickListener_inline",
                   "",
            ],
            [
                   "MapType",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_inline",
                   "The overall representation of the map.",
            ],
            [
                   "The overall representation of the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_inline",
                   "",
            ],
            [
                   "Normal",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Normal_inline",
                   "The overall representation of the map.",
            ],
            [
                   "The overall representation of the map.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Normal_inline",
                   "",
            ],
            [
                   "Satellite",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Satellite_inline",
                   "Satellite photograph data.",
            ],
            [
                   "Satellite photograph data.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Satellite_inline",
                   "",
            ],
            [
                   "Hybrid",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Hybrid_inline",
                   "Satellite photograph data and roads",
            ],
            [
                   "Satellite photograph data and roads",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_MapType_Hybrid_inline",
                   "",
            ],
            [
                   "",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMarkerClickListenerInterface_inline",
                   "Listener on the marker click event.",
            ],
            [
                   "Listener on the marker click event.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMarkerClickListenerInterface_inline",
                   "",
            ],
            [
                   "onMarkerClick",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerClickCallback_inline",
                   "A callback indicating that a marker on the map has been clicked.  @param marker An object of `DJIMarker`.  @return A boolean that indicates whether you have consumed the event (i.e.,  you want to suppress the default behavior). If it returns false, then  the default behavior will occur in addition to your custom behavior.",
            ],
            [
                   "A callback indicating that a marker on the map has been clicked.  @param marker An object of `DJIMarker`.  @return A boolean that indicates whether you have consumed the event (i.e.,  you want to suppress the default behavior). If it returns false, then  the default behavior will occur in addition to your custom behavior.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMarkerClickCallback_inline",
                   "",
            ],
            [
                   "",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMapClickListenerInterface_inline",
                   "Listener on the map click event.",
            ],
            [
                   "Listener on the map click event.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_OnMapClickListenerInterface_inline",
                   "",
            ],
            [
                   "onMapClick",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMapClickCallback_inline",
                   "A callback indicating that the map has been clicked.  @param latLng The point on the map that was clicked.",
            ],
            [
                   "A callback indicating that the map has been clicked.  @param latLng The point on the map that was clicked.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onMapClickCallback_inline",
                   "",
            ],
            [
                   "OnCameraChangeListener",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onCameraChangeListenerInterface_inline",
                   "Listener on the camera change event.",
            ],
            [
                   "Listener on the camera change event.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onCameraChangeListenerInterface_inline",
                   "",
            ],
            [
                   "onCameraChange",
                   2,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onCameraChangeCallback_inline",
                   "A callback indicating that the camera position has changed.  @param cameraPosition The new camera position.",
            ],
            [
                   "A callback indicating that the camera position has changed.  @param cameraPosition The new camera position.",
                   1,
                   "/Widgets/DJIMap.html",
                   "#DJIMap_onCameraChangeCallback_inline",
                   "",
            ],
            [
                   "DJIMarker",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "",
                   "A marker that exists on a map object. To add a new marker to  a Map, see `DJIMarkerOptions`.",
            ],
            [
                   "A marker that exists on a map object. To add a new marker to  a Map, see `DJIMarkerOptions`.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "",
                   "",
            ],
            [
                   "setPosition",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setPosition_inline",
                   "Sets marker geographic coordinate.  @param latLng An object of `DJILatLng`.",
            ],
            [
                   "Sets marker geographic coordinate.  @param latLng An object of `DJILatLng`.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setPosition_inline",
                   "",
            ],
            [
                   "setRotation",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setRotation_inline",
                   "Changes the rotation of the marker.  @param rotation The new rotation.",
            ],
            [
                   "Changes the rotation of the marker.  @param rotation The new rotation.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setRotation_inline",
                   "",
            ],
            [
                   "setIcon",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setIcon_inline",
                   "Changes the icon of the marker.  @param bitmap The new icon.",
            ],
            [
                   "Changes the icon of the marker.  @param bitmap The new icon.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setIcon_inline",
                   "",
            ],
            [
                   "getPosition",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getPosition_inline",
                   "Gets the position of the marker.  @return The position of the marker.",
            ],
            [
                   "Gets the position of the marker.  @return The position of the marker.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getPosition_inline",
                   "",
            ],
            [
                   "setTitle",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setTitle_inline",
                   "Changes the title of the marker.  @param title The new title.",
            ],
            [
                   "Changes the title of the marker.  @param title The new title.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setTitle_inline",
                   "",
            ],
            [
                   "setVisible",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setVisible_inline",
                   "Changes the visibility of the marker.  @param visible `true` if the marker is visible, `false` if it is hidden.",
            ],
            [
                   "Changes the visibility of the marker.  @param visible `true` if the marker is visible, `false` if it is hidden.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setVisible_inline",
                   "",
            ],
            [
                   "isVisible",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_isVisible_inline",
                   "Gets the visibility of the marker.  @return `true` if the marker is visible, `false` if it is hidden.",
            ],
            [
                   "Gets the visibility of the marker.  @return `true` if the marker is visible, `false` if it is hidden.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_isVisible_inline",
                   "",
            ],
            [
                   "remove",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_remove_inline",
                   "Removes the marker from the map it is on.",
            ],
            [
                   "Removes the marker from the map it is on.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_remove_inline",
                   "",
            ],
            [
                   "setTag",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setTag_inline",
                   "Sets the tag which is an object associated with the marker.  @param o An object associated with the marker.",
            ],
            [
                   "Sets the tag which is an object associated with the marker.  @param o An object associated with the marker.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_setTag_inline",
                   "",
            ],
            [
                   "getTag",
                   2,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getTag_inline",
                   "Gets the tag.  @return An object associated with the marker.",
            ],
            [
                   "Gets the tag.  @return An object associated with the marker.",
                   1,
                   "/Widgets/DJIMap_DJIMarker.html",
                   "#DJIMap_DJIMarker_getTag_inline",
                   "",
            ],
            [
                   "DJIMarkerOptions",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "",
                   "Represents a set of instructions for creating a new `DJIMarker`. This  object can be passed to `DJIMarkerOptions` to add a new  Marker to a map. Each method returns the object itself so that they can be  used in a builder pattern.",
            ],
            [
                   "Represents a set of instructions for creating a new `DJIMarker`. This  object can be passed to `DJIMarkerOptions` to add a new  Marker to a map. Each method returns the object itself so that they can be  used in a builder pattern.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "",
                   "",
            ],
            [
                   "DJIMarkerOptions",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_init_inline",
                   "Creates a new `DJIMarkerOptions` object.",
            ],
            [
                   "Creates a new `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_init_inline",
                   "",
            ],
            [
                   "position",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_position_inline",
                   "Sets the position the new Marker will have when added to the Map.  @param position The coordinates of the Marker  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the position the new Marker will have when added to the Map.  @param position The coordinates of the Marker  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_position_inline",
                   "",
            ],
            [
                   "icon",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_icon_inline",
                   "Sets the icon the new Marker will have when added to the Map.  @param bitmap The icon of the Marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the icon the new Marker will have when added to the Map.  @param bitmap The icon of the Marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_icon_inline",
                   "",
            ],
            [
                   "rotation",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_rotation_inline",
                   "Sets the rotation the new Marker will have when added to the Map.  @param rotation The rotation of the Marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the rotation the new Marker will have when added to the Map.  @param rotation The rotation of the Marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_rotation_inline",
                   "",
            ],
            [
                   "visible",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_visible_inline",
                   "Sets the visibility the new Marker will have when added to the Map.  @param visible The visibility of the Marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the visibility the new Marker will have when added to the Map.  @param visible The visibility of the Marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_visible_inline",
                   "",
            ],
            [
                   "title",
                   2,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_title_inline",
                   "Sets the title the new Marker will have when added to the Map.  @param title The title of the Marker.  @return The `DJIMarkerOptions` object.",
            ],
            [
                   "Sets the title the new Marker will have when added to the Map.  @param title The title of the Marker.  @return The `DJIMarkerOptions` object.",
                   1,
                   "/Widgets/DJIMap_DJIMarkerOptions.html",
                   "#DJIMap_DJIMarkerOptions_title_inline",
                   "",
            ],
            [
                   "DJICameraPosition",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "",
                   "The position of the camera.",
            ],
            [
                   "The position of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "",
                   "",
            ],
            [
                   "DJICameraPosition",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_constructor1_inline",
                   "Creates a new camera position with the given coordinates, zoom level, tilt, and bearing.  @param target The position of the center point. @param zoom The zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level. @param tilt The tilt of the camera. @param bearing The orientation of the camera.",
            ],
            [
                   "Creates a new camera position with the given coordinates, zoom level, tilt, and bearing.  @param target The position of the center point. @param zoom The zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level. @param tilt The tilt of the camera. @param bearing The orientation of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_constructor1_inline",
                   "",
            ],
            [
                   "DJICameraPosition",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_constructor2_inline",
                   "Creates a new camera position with the given coordinates and zoom level.  @param position The position of the center point. @param zoom The zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level.",
            ],
            [
                   "Creates a new camera position with the given coordinates and zoom level.  @param position The position of the center point. @param zoom The zoom level between 0 and 20. 0 is the lowest zoom level which will show  the entire map, and 20 is the highest zoom level.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_constructor2_inline",
                   "",
            ],
            [
                   "getPosition",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getPosition_inline",
                   "Gets the position of the center point of the camera.  @return The position of the center point of the camera.",
            ],
            [
                   "Gets the position of the center point of the camera.  @return The position of the center point of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getPosition_inline",
                   "",
            ],
            [
                   "getZoom",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getZoom_inline",
                   "Gets the zoom level of the camera.  @return The zoom level of the camera.",
            ],
            [
                   "Gets the zoom level of the camera.  @return The zoom level of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getZoom_inline",
                   "",
            ],
            [
                   "getTilt",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getTilt_inline",
                   "Gets the tilt of the camera.  @return The tilt of the camera.",
            ],
            [
                   "Gets the tilt of the camera.  @return The tilt of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getTilt_inline",
                   "",
            ],
            [
                   "getBearing",
                   2,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getBearing_inline",
                   "Gets the orientation of the camera.  @return The orientation of the camera.",
            ],
            [
                   "Gets the orientation of the camera.  @return The orientation of the camera.",
                   1,
                   "/Widgets/DJIMap_DJICameraPosition.html",
                   "#DJIMap_DJICameraPosition_getBearing_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "",
                   "Represents a point which includes latitude, longitude, altitude,  and accuracy info on a map.",
            ],
            [
                   "Represents a point which includes latitude, longitude, altitude,  and accuracy info on a map.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor1_inline",
                   "Creates a new `DJILatLng` object with the coordinates (latitude, longitude).  @param latitude The latitude of the map point. @param longitude The longitude of the map point.",
            ],
            [
                   "Creates a new `DJILatLng` object with the coordinates (latitude, longitude).  @param latitude The latitude of the map point. @param longitude The longitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor1_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor2_inline",
                   "Creates a new `DJILatLng` object with the coordinates (latitude, longitude and altitude).  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point.",
            ],
            [
                   "Creates a new `DJILatLng` object with the coordinates (latitude, longitude and altitude).  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor2_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor3_inline",
                   "Creates a new `DJILatLng` object with four related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point.",
            ],
            [
                   "Creates a new `DJILatLng` object with four related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor3_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor4_inline",
                   "Creates a new LatLng object with five related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point. @param time The time of the map point.",
            ],
            [
                   "Creates a new LatLng object with five related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point. @param time The time of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor4_inline",
                   "",
            ],
            [
                   "DJILatLng",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor5_inline",
                   "Creates a new LatLng object with five related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point. @param time The time of the map point. @param elapsedRealtimeNanos The time in elapsed real-time of the map point.",
            ],
            [
                   "Creates a new LatLng object with five related parameters.  @param latitude The latitude of the map point. @param longitude The longitude of the map point. @param altitude The altitude of the map point. @param accuracy The accuracy of the map point. @param time The time of the map point. @param elapsedRealtimeNanos The time in elapsed real-time of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_constructor5_inline",
                   "",
            ],
            [
                   "getLatitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getLatitude_inline",
                   "Gets the latitude of the map point.  @return The latitude of the map point.",
            ],
            [
                   "Gets the latitude of the map point.  @return The latitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getLatitude_inline",
                   "",
            ],
            [
                   "setLatitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setLatitude_inline",
                   "Sets the latitude of the map point.  @param latitude The latitude of the map point.",
            ],
            [
                   "Sets the latitude of the map point.  @param latitude The latitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setLatitude_inline",
                   "",
            ],
            [
                   "getLongitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getLongitude_inline",
                   "Gets the longitude of the map point.  @return The longitude of the map point.",
            ],
            [
                   "Gets the longitude of the map point.  @return The longitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getLongitude_inline",
                   "",
            ],
            [
                   "setLongitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setLongitude_inline",
                   "Sets the longitude of the map point.  @param longitude The longitude of the map point.",
            ],
            [
                   "Sets the longitude of the map point.  @param longitude The longitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setLongitude_inline",
                   "",
            ],
            [
                   "getAltitude",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getAltitude_inline",
                   "Gets the altitude of the map point.  @return The altitude of the map point.",
            ],
            [
                   "Gets the altitude of the map point.  @return The altitude of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getAltitude_inline",
                   "",
            ],
            [
                   "getAccuracy",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getAccuracy_inline",
                   "Gets the accuracy of the map point.  @return The accuracy of the map point.",
            ],
            [
                   "Gets the accuracy of the map point.  @return The accuracy of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getAccuracy_inline",
                   "",
            ],
            [
                   "setAccuracy",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setAccuracy_inline",
                   "Sets the accuracy of the map point.  @param accuracy The accuracy of the map point.",
            ],
            [
                   "Sets the accuracy of the map point.  @param accuracy The accuracy of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setAccuracy_inline",
                   "",
            ],
            [
                   "getTime",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getTime_inline",
                   "Gets the time of the map point.  @return The time of the map point.",
            ],
            [
                   "Gets the time of the map point.  @return The time of the map point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getTime_inline",
                   "",
            ],
            [
                   "setTime",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setTime_inline",
                   "Sets the time of the map point.  @param time The accuracy of the point.",
            ],
            [
                   "Sets the time of the map point.  @param time The accuracy of the point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setTime_inline",
                   "",
            ],
            [
                   "getElapsedRealtimeNanos",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getElapsedRealtimeNanos_inline",
                   "Gets the time in elapsed real-time of the map point.  @return The time in elapsed real-time of the point.",
            ],
            [
                   "Gets the time in elapsed real-time of the map point.  @return The time in elapsed real-time of the point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_getElapsedRealtimeNanos_inline",
                   "",
            ],
            [
                   "setElapsedRealtimeNanos",
                   2,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setElapsedRealtimeNanos_inline",
                   "Sets the time in elapsed real-time of the map point.  @param elapsedRealtimeNanos The time in elapsed real-time of the point.",
            ],
            [
                   "Sets the time in elapsed real-time of the map point.  @param elapsedRealtimeNanos The time in elapsed real-time of the point.",
                   1,
                   "/Widgets/DJIMap_DJILatLng.html",
                   "#DJIMap_DJILatLng_setElapsedRealtimeNanos_inline",
                   "",
            ],
            [
                   "WiFiSignalWidget",
                   2,
                   "/Widgets/DUXWiFiSignalWidget.html",
                   "",
                   "Display: Widget that displays the aircraft's WiFi signal strength and channel.  Usage: Preferred Aspect Ratio: 1:1",
            ],
            [
                   "Display: Widget that displays the aircraft's WiFi signal strength and channel.  Usage: Preferred Aspect Ratio: 1:1",
                   1,
                   "/Widgets/DUXWiFiSignalWidget.html",
                   "",
                   "",
            ],
            [
                   "onWifiSignalChange",
                   2,
                   "/Widgets/DUXWiFiSignalWidget.html",
                   "#DUXWiFiSignalWidget_onWifiSignalChange_inline",
                   "Triggers when WiFi signal changes.  @param signalValue 0 - 100; 0 means no signal, 100 means the best of the signal strength.",
            ],
            [
                   "Triggers when WiFi signal changes.  @param signalValue 0 - 100; 0 means no signal, 100 means the best of the signal strength.",
                   1,
                   "/Widgets/DUXWiFiSignalWidget.html",
                   "#DUXWiFiSignalWidget_onWifiSignalChange_inline",
                   "",
            ],
            [
                   "RadarWidget",
                   2,
                   "/Widgets/DUXRadarWidget.html",
                   "",
                   "Widget to see obstacle detection radar for front, back, left, right,  and top of aircraft.",
            ],
            [
                   "Widget to see obstacle detection radar for front, back, left, right,  and top of aircraft.",
                   1,
                   "/Widgets/DUXRadarWidget.html",
                   "",
                   "",
            ],
            [
                   "HistogramWidget",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "",
                   "Widget to display histogram chart.",
            ],
            [
                   "Widget to display histogram chart.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "",
                   "",
            ],
            [
                   "getHistogramLineColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramLineColor_inline",
                   "Line color of the histogram.  @return An int value of histogram line color.",
            ],
            [
                   "Line color of the histogram.  @return An int value of histogram line color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramLineColor_inline",
                   "",
            ],
            [
                   "setHistogramLineColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramLineColor_inline",
                   "Set line color of the histogram.  @param histogramLineColor An int value of histogram line color.",
            ],
            [
                   "Set line color of the histogram.  @param histogramLineColor An int value of histogram line color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramLineColor_inline",
                   "",
            ],
            [
                   "getHistogramFillColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramFillColor_inline",
                   "Fill color of the histogram.  @return An int value of histogram fill color.",
            ],
            [
                   "Fill color of the histogram.  @return An int value of histogram fill color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramFillColor_inline",
                   "",
            ],
            [
                   "setHistogramFillColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramFillColor_inline",
                   "Set fill color of the histogram.  @param histogramFillColor An int value of the histogram fill color.",
            ],
            [
                   "Set fill color of the histogram.  @param histogramFillColor An int value of the histogram fill color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramFillColor_inline",
                   "",
            ],
            [
                   "getHistogramGridColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramGridColor_inline",
                   "Grid color of the histogram.  @return An int value of the histogram grid color.",
            ],
            [
                   "Grid color of the histogram.  @return An int value of the histogram grid color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramGridColor_inline",
                   "",
            ],
            [
                   "setHistogramGridColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramGridColor_inline",
                   "Set grid color of the histogram.  @param histogramGridColor An int value of the histogram grid color.",
            ],
            [
                   "Set grid color of the histogram.  @param histogramGridColor An int value of the histogram grid color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramGridColor_inline",
                   "",
            ],
            [
                   "getHistogramBackgroundColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramBackgroundColor_inline",
                   "Background color of the histogram.  @return An int value of the histogram background color.",
            ],
            [
                   "Background color of the histogram.  @return An int value of the histogram background color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_histogramBackgroundColor_inline",
                   "",
            ],
            [
                   "setHistogramBackgroundColor",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramBackgroundColor_inline",
                   "Set background color of the histogram.  @param histogramBackgroundColor An int value of the histogram background color.",
            ],
            [
                   "Set background color of the histogram.  @param histogramBackgroundColor An int value of the histogram background color.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setHistogramBackgroundColor_inline",
                   "",
            ],
            [
                   "isGridDrawn",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldDrawGrid_inline",
                   "Return `true` if grid needs to be drawn.  @return A boolean value to check if grid needs to be drawn.",
            ],
            [
                   "Return `true` if grid needs to be drawn.  @return A boolean value to check if grid needs to be drawn.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldDrawGrid_inline",
                   "",
            ],
            [
                   "setShouldDrawGrid",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldDrawGrid_inline",
                   "Determine whether grid needs to be drawn.  @param shouldDrawGrid `true` if grid needs to be drawn.",
            ],
            [
                   "Determine whether grid needs to be drawn.  @param shouldDrawGrid `true` if grid needs to be drawn.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldDrawGrid_inline",
                   "",
            ],
            [
                   "isDrawnCubic",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldDrawCubic_inline",
                   "Return `true` if histogram should be drawn in cubic mode.  @return A boolean value to check if cubic needs to be drawn.",
            ],
            [
                   "Return `true` if histogram should be drawn in cubic mode.  @return A boolean value to check if cubic needs to be drawn.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldDrawCubic_inline",
                   "",
            ],
            [
                   "setShouldDrawCubic",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldDrawCubic_inline",
                   "Determine whether cubic needs to be drawn.  @param shouldDrawCubic `true` if cubic needs to be drawn.",
            ],
            [
                   "Determine whether cubic needs to be drawn.  @param shouldDrawCubic `true` if cubic needs to be drawn.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldDrawCubic_inline",
                   "",
            ],
            [
                   "isCloseButtonShown",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldShowCloseButton_inline",
                   "Return `true` if histogram should show the close button.  @return A boolean value to check if histogram needs to show the close button.",
            ],
            [
                   "Return `true` if histogram should show the close button.  @return A boolean value to check if histogram needs to show the close button.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_shouldShowCloseButton_inline",
                   "",
            ],
            [
                   "setShouldShowCloseButton",
                   2,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldShowCloseButton_inline",
                   "Determine whether histogram should show the close button.  @param shouldShowCloseButton `true` if histogram should show the close button.",
            ],
            [
                   "Determine whether histogram should show the close button.  @param shouldShowCloseButton `true` if histogram should show the close button.",
                   1,
                   "/Widgets/DUXHistogramWidget.html",
                   "#DUXHistogramWidget_setShouldShowCloseButton_inline",
                   "",
            ],
        ]
    }
}
